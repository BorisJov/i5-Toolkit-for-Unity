{
  "api/Global.AuthorizationFlow.html": {
    "href": "api/Global.AuthorizationFlow.html",
    "title": "Enum AuthorizationFlow | i5 Toolkit Documentation",
    "keywords": "Enum AuthorizationFlow The authorization flow of the OpenID Connect procedure It is recommended to use the Authorization Code flow Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum AuthorizationFlow Fields Name Description AUTHORIZATION_CODE IMPLICIT"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | i5 Toolkit Documentation",
    "keywords": "Namespace Global Classes JsonSerialization LearningLayersBootstrapper Bootstrapper for initializing the OpenID Connect service for the learning layers provider LogGenerator NotificationMessage NotificationService OpenIDConnectTester PersistenceScene Interfaces INotificationMessage INotificationService Enums AuthorizationFlow The authorization flow of the OpenID Connect procedure It is recommended to use the Authorization Code flow"
  },
  "api/Global.INotificationMessage.html": {
    "href": "api/Global.INotificationMessage.html",
    "title": "Interface INotificationMessage | i5 Toolkit Documentation",
    "keywords": "Interface INotificationMessage Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface INotificationMessage Properties Content Declaration string Content { get; } Property Value Type Description String"
  },
  "api/Global.INotificationService.html": {
    "href": "api/Global.INotificationService.html",
    "title": "Interface INotificationService | i5 Toolkit Documentation",
    "keywords": "Interface INotificationService Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface INotificationService : IService Methods PostNotification(INotificationMessage) Declaration void PostNotification(INotificationMessage message) Parameters Type Name Description INotificationMessage message PostNotification(String) Declaration void PostNotification(string message) Parameters Type Name Description String message Events NotificationPosted Declaration event EventHandler<INotificationMessage> NotificationPosted Event Type Type Description EventHandler < INotificationMessage >"
  },
  "api/Global.JsonSerialization.html": {
    "href": "api/Global.JsonSerialization.html",
    "title": "Class JsonSerialization | i5 Toolkit Documentation",
    "keywords": "Class JsonSerialization Inheritance Object JsonSerialization Namespace : Global Assembly : cs.temp.dll.dll Syntax public class JsonSerialization Methods TestTokenStruct_JsonUtility() Declaration public void TestTokenStruct_JsonUtility()"
  },
  "api/Global.LearningLayersBootstrapper.html": {
    "href": "api/Global.LearningLayersBootstrapper.html",
    "title": "Class LearningLayersBootstrapper | i5 Toolkit Documentation",
    "keywords": "Class LearningLayersBootstrapper Bootstrapper for initializing the OpenID Connect service for the learning layers provider Inheritance Object LearningLayersBootstrapper Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LearningLayersBootstrapper : BaseServiceBootstrapper Methods RegisterServices() Declaration protected override void RegisterServices() UnRegisterServices() Declaration protected override void UnRegisterServices()"
  },
  "api/Global.LogGenerator.html": {
    "href": "api/Global.LogGenerator.html",
    "title": "Class LogGenerator | i5 Toolkit Documentation",
    "keywords": "Class LogGenerator Inheritance Object LogGenerator Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LogGenerator : MonoBehaviour"
  },
  "api/Global.NotificationMessage.html": {
    "href": "api/Global.NotificationMessage.html",
    "title": "Class NotificationMessage | i5 Toolkit Documentation",
    "keywords": "Class NotificationMessage Inheritance Object NotificationMessage Implements INotificationMessage Namespace : Global Assembly : cs.temp.dll.dll Syntax public class NotificationMessage : INotificationMessage Constructors NotificationMessage(String) Declaration public NotificationMessage(string content) Parameters Type Name Description String content Properties Content Declaration public string Content { get; } Property Value Type Description String Implements INotificationMessage"
  },
  "api/Global.NotificationService.html": {
    "href": "api/Global.NotificationService.html",
    "title": "Class NotificationService | i5 Toolkit Documentation",
    "keywords": "Class NotificationService Inheritance Object NotificationService Implements INotificationService IService Namespace : Global Assembly : cs.temp.dll.dll Syntax public class NotificationService : INotificationService, IService Constructors NotificationService() Declaration public NotificationService() Methods Cleanup() Declaration public void Cleanup() Initialize(IServiceManager) Declaration public void Initialize(IServiceManager owner) Parameters Type Name Description IServiceManager owner PostNotification(INotificationMessage) Declaration public void PostNotification(INotificationMessage message) Parameters Type Name Description INotificationMessage message PostNotification(String) Declaration public void PostNotification(string message) Parameters Type Name Description String message Events NotificationPosted Declaration public event EventHandler<INotificationMessage> NotificationPosted Event Type Type Description EventHandler < INotificationMessage > Implements INotificationService IService"
  },
  "api/Global.OpenIDConnectTester.html": {
    "href": "api/Global.OpenIDConnectTester.html",
    "title": "Class OpenIDConnectTester | i5 Toolkit Documentation",
    "keywords": "Class OpenIDConnectTester Inheritance Object OpenIDConnectTester Namespace : Global Assembly : cs.temp.dll.dll Syntax public class OpenIDConnectTester : MonoBehaviour"
  },
  "api/Global.PersistenceScene.html": {
    "href": "api/Global.PersistenceScene.html",
    "title": "Class PersistenceScene | i5 Toolkit Documentation",
    "keywords": "Class PersistenceScene Inheritance Object PersistenceScene Namespace : Global Assembly : cs.temp.dll.dll Syntax public static class PersistenceScene Methods GetPersistentScene() Gets or creates the persistent scene if it does not exist In the editor, this will always return the active scene since you should not create new scenes in the editor Declaration public static Scene GetPersistentScene() Returns Type Description Scene Returns the persistent scene MarkPersistent(GameObject) Moves the provided GameObject to the persistent scene If this is executed in an editor build, this has no effect Declaration public static void MarkPersistent(GameObject gameObject) Parameters Type Name Description GameObject gameObject GameObject which should be made persistent UnmarkPersistent(GameObject) Makes an object not persist anymore by moving it to the active scene Declaration public static void UnmarkPersistent(GameObject gameObject) Parameters Type Name Description GameObject gameObject The GameObject which should not be persistent anymore"
  },
  "api/i5.Toolkit.Core.AppConsole.ActivationVisibilityManager.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.ActivationVisibilityManager.html",
    "title": "Class ActivationVisibilityManager | i5 Toolkit Documentation",
    "keywords": "Class ActivationVisibilityManager Visibility manager which changes the visibility by activating/deactivating the gameobject Inheritance Object VisibilityManager ActivationVisibilityManager Implements IVisibilityManager Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class ActivationVisibilityManager : VisibilityManager, IVisibilityManager Properties IsVisible Gets or sets the current visibility of the gameobject Declaration public override bool IsVisible { get; set; } Property Value Type Description Boolean Overrides VisibilityManager.IsVisible Implements IVisibilityManager"
  },
  "api/i5.Toolkit.Core.AppConsole.AutoScroller.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.AutoScroller.html",
    "title": "Class AutoScroller | i5 Toolkit Documentation",
    "keywords": "Class AutoScroller Auto scroller which is automatically scrolls a scrollview to the bottom The scroll view can be activated by an UI element and deactivated by manually scrolling the view Inheritance Object AutoScroller Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class AutoScroller Constructors AutoScroller(IScrollView, IRectangle, IActivateable) Creates a new instance of the auto scroller Declaration public AutoScroller(IScrollView scrollView, IRectangle content, IActivateable elementToStartScroller) Parameters Type Name Description IScrollView scrollView The view which should be scrolled IRectangle content The content rectangle inside of the scrollview IActivateable elementToStartScroller The interaction element which starts the scroller Properties ScrollerActive If true, the scroller will make sure that the scrollview is always scrolled to the bottom Declaration public bool ScrollerActive { get; set; } Property Value Type Description Boolean Methods NotifyScrollValueChanged() Notifies the scroller that the scroll view was changed This can be due to two reasons: The user scrolled the UI element The size of the scroll view's content changed Declaration public void NotifyScrollValueChanged() OnEnable() Scrolls the scrollview to the bottom when the object is enabled Declaration public void OnEnable()"
  },
  "api/i5.Toolkit.Core.AppConsole.AutoScrollerBehaviour.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.AutoScrollerBehaviour.html",
    "title": "Class AutoScrollerBehaviour | i5 Toolkit Documentation",
    "keywords": "Class AutoScrollerBehaviour MonoBehaviour for binding the auto scroller logic Inheritance Object AutoScrollerBehaviour Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class AutoScrollerBehaviour : MonoBehaviour Properties AutoScroller The instance which controls the auto scrolling Declaration public AutoScroller AutoScroller { get; } Property Value Type Description AutoScroller Methods OnAutoScrollButtonPressed() Called if the button which activates the automatic scrolling is pressed Declaration public void OnAutoScrollButtonPressed() OnScrollValueChanged() Called if the scroll value changes and notifies the auto scroller Declaration public void OnScrollValueChanged()"
  },
  "api/i5.Toolkit.Core.AppConsole.Console.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.Console.html",
    "title": "Class Console | i5 Toolkit Documentation",
    "keywords": "Class Console Handles the console logic Inheritance Object Console Implements IConsole Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class Console : IConsole Constructors Console() Creates a new console Declaration public Console() Properties IsCapturing If true, the console captures messages Declaration public bool IsCapturing { get; set; } Property Value Type Description Boolean Messages Captured messages Declaration public List<ILogMessage> Messages { get; protected set; } Property Value Type Description List < ILogMessage > Methods AddMessage(ILogMessage) Declaration protected void AddMessage(ILogMessage message) Parameters Type Name Description ILogMessage message Subscribe() Declaration protected virtual void Subscribe() Unsubscribe() Declaration protected virtual void Unsubscribe() Events OnMessageAdded Event which is invoked when a new message is added to the console Declaration public event Action OnMessageAdded Event Type Type Description Action Implements IConsole"
  },
  "api/i5.Toolkit.Core.AppConsole.ConsoleUI.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.ConsoleUI.html",
    "title": "Class ConsoleUI | i5 Toolkit Documentation",
    "keywords": "Class ConsoleUI Logic for the console's UI connection Inheritance Object ConsoleUI TextConsoleUI Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public abstract class ConsoleUI Constructors ConsoleUI(LogFormatterConfiguration) Creates a new console UI logic Declaration public ConsoleUI(LogFormatterConfiguration logFormatterConfiguration = null) Parameters Type Name Description LogFormatterConfiguration logFormatterConfiguration Determines how messages should be formatted Fields logFormatter Declaration protected ILogFormatter logFormatter Field Value Type Description ILogFormatter Properties CaptureInBackground If true, the console captures messages, even if the object is deactivated Declaration public bool CaptureInBackground { get; set; } Property Value Type Description Boolean Console Console which handles the message capturing Declaration public IConsole Console { get; set; } Property Value Type Description IConsole Methods OnDisable() Called if hte object is disabled Stops capturing if it should not capture in background Declaration public void OnDisable() OnEnable() Called if the object is enabled Starts capturing messages Declaration public void OnEnable() UpdateUI() Declaration protected abstract void UpdateUI()"
  },
  "api/i5.Toolkit.Core.AppConsole.ConsoleUIBehaviour.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.ConsoleUIBehaviour.html",
    "title": "Class ConsoleUIBehaviour | i5 Toolkit Documentation",
    "keywords": "Class ConsoleUIBehaviour MonoBehaviour to connect console UI to Unity Inheritance Object ConsoleUIBehaviour TextMeshProUGUIConsoleUI Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public abstract class ConsoleUIBehaviour : MonoBehaviour Fields captureInBackground Declaration protected bool captureInBackground Field Value Type Description Boolean consoleUI Declaration protected ConsoleUI consoleUI Field Value Type Description ConsoleUI Methods Awake() Declaration protected virtual void Awake() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable()"
  },
  "api/i5.Toolkit.Core.AppConsole.DefaultConsoleFormatter.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.DefaultConsoleFormatter.html",
    "title": "Class DefaultConsoleFormatter | i5 Toolkit Documentation",
    "keywords": "Class DefaultConsoleFormatter Default console formatter which should be used if no configuration file is provided Inheritance Object DefaultConsoleFormatter Implements ILogFormatter Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class DefaultConsoleFormatter : ILogFormatter Methods Format(ILogMessage) Formats the given log messages to text output The default formatter returns the log message's content Declaration public string Format(ILogMessage logMessage) Parameters Type Name Description ILogMessage logMessage The log message to format Returns Type Description String Returns a formatted string Implements ILogFormatter"
  },
  "api/i5.Toolkit.Core.AppConsole.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.html",
    "title": "Namespace i5.Toolkit.Core.AppConsole | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.AppConsole Classes ActivationVisibilityManager Visibility manager which changes the visibility by activating/deactivating the gameobject AutoScroller Auto scroller which is automatically scrolls a scrollview to the bottom The scroll view can be activated by an UI element and deactivated by manually scrolling the view AutoScrollerBehaviour MonoBehaviour for binding the auto scroller logic Console Handles the console logic ConsoleUI Logic for the console's UI connection ConsoleUIBehaviour MonoBehaviour to connect console UI to Unity DefaultConsoleFormatter Default console formatter which should be used if no configuration file is provided LogColorFormatterConfiguration A configuration object for formatting log messages using colors LogFormatterConfiguration A console formatter configuration object which can be set up as a scriptable object LogMessage Log message as posted by the Unity API TextConsoleUI Console UI for text displays TextMeshProUGUIConsoleUI MonoBehaviour for constructing console UIs with the TextMeshProUGUI TMPLogColorFormatter Color-coded log formatter for TextMeshPro TMPLogColorFormatterConfiguration The color log format configuration for TextMeshPro displays VisibilityManager MonoBehaviour for managing an object's visiblity VisibilitySetter Binding component for handling user input and delegating it to the visibility manager Interfaces IConsole Console for capturing messages ILogColorFormatter Log formatter that uses color coding ILogFormatter Formatter that can format log messages to text output ILogMessage Log message IVisibilityManager Visibility manager that handles showing and hiding Unity objects"
  },
  "api/i5.Toolkit.Core.AppConsole.IConsole.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.IConsole.html",
    "title": "Interface IConsole | i5 Toolkit Documentation",
    "keywords": "Interface IConsole Console for capturing messages Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public interface IConsole Properties IsCapturing If true, the console is capturing messages Declaration bool IsCapturing { get; set; } Property Value Type Description Boolean Messages List of captured messages Declaration List<ILogMessage> Messages { get; } Property Value Type Description List < ILogMessage > Events OnMessageAdded Event which is invoked if a message was captured Declaration event Action OnMessageAdded Event Type Type Description Action"
  },
  "api/i5.Toolkit.Core.AppConsole.ILogColorFormatter.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.ILogColorFormatter.html",
    "title": "Interface ILogColorFormatter | i5 Toolkit Documentation",
    "keywords": "Interface ILogColorFormatter Log formatter that uses color coding Inherited Members ILogFormatter.Format(ILogMessage) Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public interface ILogColorFormatter : ILogFormatter Properties AssertColor The color for assert messages Declaration Color AssertColor { get; set; } Property Value Type Description Color DefaultColor The color for unexpected message types Declaration Color DefaultColor { get; set; } Property Value Type Description Color ErrorColor The color for error messages Declaration Color ErrorColor { get; set; } Property Value Type Description Color ExceptionColor The color for exception messages Declaration Color ExceptionColor { get; set; } Property Value Type Description Color LogColor The color for log messages Declaration Color LogColor { get; set; } Property Value Type Description Color WarningColor The color for warning messages Declaration Color WarningColor { get; set; } Property Value Type Description Color"
  },
  "api/i5.Toolkit.Core.AppConsole.ILogFormatter.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.ILogFormatter.html",
    "title": "Interface ILogFormatter | i5 Toolkit Documentation",
    "keywords": "Interface ILogFormatter Formatter that can format log messages to text output Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public interface ILogFormatter Methods Format(ILogMessage) Formats the given log message to text output Declaration string Format(ILogMessage logMessage) Parameters Type Name Description ILogMessage logMessage The log message to format Returns Type Description String Returns formatted text output based on the log message"
  },
  "api/i5.Toolkit.Core.AppConsole.ILogMessage.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.ILogMessage.html",
    "title": "Interface ILogMessage | i5 Toolkit Documentation",
    "keywords": "Interface ILogMessage Log message Inherited Members INotificationMessage.Content Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public interface ILogMessage : INotificationMessage Properties LogType The type of log message Declaration LogType LogType { get; } Property Value Type Description LogType StackTrace The stack trace of the log message Declaration string StackTrace { get; } Property Value Type Description String"
  },
  "api/i5.Toolkit.Core.AppConsole.IVisibilityManager.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.IVisibilityManager.html",
    "title": "Interface IVisibilityManager | i5 Toolkit Documentation",
    "keywords": "Interface IVisibilityManager Visibility manager that handles showing and hiding Unity objects Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public interface IVisibilityManager Properties IsVisible If true, an object is visible Declaration bool IsVisible { get; set; } Property Value Type Description Boolean"
  },
  "api/i5.Toolkit.Core.AppConsole.LogColorFormatterConfiguration.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.LogColorFormatterConfiguration.html",
    "title": "Class LogColorFormatterConfiguration | i5 Toolkit Documentation",
    "keywords": "Class LogColorFormatterConfiguration A configuration object for formatting log messages using colors Inheritance Object LogFormatterConfiguration LogColorFormatterConfiguration TMPLogColorFormatterConfiguration Inherited Members LogFormatterConfiguration.GenerateFormatter() Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public abstract class LogColorFormatterConfiguration : LogFormatterConfiguration Fields assertColor Declaration protected Color assertColor Field Value Type Description Color errorColor Declaration protected Color errorColor Field Value Type Description Color exceptionColor Declaration protected Color exceptionColor Field Value Type Description Color logColor Declaration protected Color logColor Field Value Type Description Color warningColor Declaration protected Color warningColor Field Value Type Description Color"
  },
  "api/i5.Toolkit.Core.AppConsole.LogFormatterConfiguration.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.LogFormatterConfiguration.html",
    "title": "Class LogFormatterConfiguration | i5 Toolkit Documentation",
    "keywords": "Class LogFormatterConfiguration A console formatter configuration object which can be set up as a scriptable object Inheritance Object LogFormatterConfiguration LogColorFormatterConfiguration Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public abstract class LogFormatterConfiguration : ScriptableObject Methods GenerateFormatter() Creates a formatter instance which can be used to format messages Declaration public abstract ILogFormatter GenerateFormatter() Returns Type Description ILogFormatter Returns the formatter instance with the set up configuration"
  },
  "api/i5.Toolkit.Core.AppConsole.LogMessage.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.LogMessage.html",
    "title": "Class LogMessage | i5 Toolkit Documentation",
    "keywords": "Class LogMessage Log message as posted by the Unity API Inheritance Object LogMessage Implements ILogMessage INotificationMessage Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class LogMessage : ILogMessage, INotificationMessage Constructors LogMessage(String, String, LogType) Creates a new log message instance Declaration public LogMessage(string content, string stackTrace, LogType logType) Parameters Type Name Description String content The content of the log message String stackTrace The stack trace of the log message LogType logType The typ of log message Properties Content Content of the log message Declaration public string Content { get; } Property Value Type Description String LogType Type of the log message Declaration public LogType LogType { get; } Property Value Type Description LogType StackTrace Stack trace of the log message Declaration public string StackTrace { get; } Property Value Type Description String Implements ILogMessage INotificationMessage"
  },
  "api/i5.Toolkit.Core.AppConsole.TextConsoleUI.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.TextConsoleUI.html",
    "title": "Class TextConsoleUI | i5 Toolkit Documentation",
    "keywords": "Class TextConsoleUI Console UI for text displays Inheritance Object ConsoleUI TextConsoleUI Inherited Members ConsoleUI.CaptureInBackground ConsoleUI.logFormatter ConsoleUI.Console ConsoleUI.OnEnable() ConsoleUI.OnDisable() Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class TextConsoleUI : ConsoleUI Constructors TextConsoleUI(ITextDisplay, LogFormatterConfiguration) Creates the console UI logic instance Declaration public TextConsoleUI(ITextDisplay consoleTextDisplay, LogFormatterConfiguration logFormatterConfiguration = null) Parameters Type Name Description ITextDisplay consoleTextDisplay The text display on which messages should be shown LogFormatterConfiguration logFormatterConfiguration The formatter configuration that defines how messages are formatted Methods UpdateUI() Declaration protected override void UpdateUI() Overrides ConsoleUI.UpdateUI()"
  },
  "api/i5.Toolkit.Core.AppConsole.TextMeshProUGUIConsoleUI.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.TextMeshProUGUIConsoleUI.html",
    "title": "Class TextMeshProUGUIConsoleUI | i5 Toolkit Documentation",
    "keywords": "Class TextMeshProUGUIConsoleUI MonoBehaviour for constructing console UIs with the TextMeshProUGUI Inheritance Object ConsoleUIBehaviour TextMeshProUGUIConsoleUI Inherited Members ConsoleUIBehaviour.captureInBackground ConsoleUIBehaviour.consoleUI ConsoleUIBehaviour.OnEnable() ConsoleUIBehaviour.OnDisable() Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class TextMeshProUGUIConsoleUI : ConsoleUIBehaviour Fields logFormatterConfiguration Declaration protected LogFormatterConfiguration logFormatterConfiguration Field Value Type Description LogFormatterConfiguration Methods Awake() Declaration protected override void Awake() Overrides ConsoleUIBehaviour.Awake()"
  },
  "api/i5.Toolkit.Core.AppConsole.TMPLogColorFormatter.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.TMPLogColorFormatter.html",
    "title": "Class TMPLogColorFormatter | i5 Toolkit Documentation",
    "keywords": "Class TMPLogColorFormatter Color-coded log formatter for TextMeshPro Inheritance Object TMPLogColorFormatter Implements ILogColorFormatter ILogFormatter Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class TMPLogColorFormatter : ILogColorFormatter, ILogFormatter Properties AssertColor The color for assert messages Declaration public Color AssertColor { get; set; } Property Value Type Description Color DefaultColor The color for unexpected message types Declaration public Color DefaultColor { get; set; } Property Value Type Description Color ErrorColor The color for error messages Declaration public Color ErrorColor { get; set; } Property Value Type Description Color ExceptionColor The color for exception messages Declaration public Color ExceptionColor { get; set; } Property Value Type Description Color LogColor The color for log messages Declaration public Color LogColor { get; set; } Property Value Type Description Color WarningColor The color for warning messages Declaration public Color WarningColor { get; set; } Property Value Type Description Color Methods Format(ILogMessage) Formats the given log message to text output Declaration public string Format(ILogMessage message) Parameters Type Name Description ILogMessage message The message to format Returns Type Description String Returns formatted text output based on the log message Implements ILogColorFormatter ILogFormatter"
  },
  "api/i5.Toolkit.Core.AppConsole.TMPLogColorFormatterConfiguration.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.TMPLogColorFormatterConfiguration.html",
    "title": "Class TMPLogColorFormatterConfiguration | i5 Toolkit Documentation",
    "keywords": "Class TMPLogColorFormatterConfiguration The color log format configuration for TextMeshPro displays Inheritance Object LogFormatterConfiguration LogColorFormatterConfiguration TMPLogColorFormatterConfiguration Inherited Members LogColorFormatterConfiguration.logColor LogColorFormatterConfiguration.warningColor LogColorFormatterConfiguration.errorColor LogColorFormatterConfiguration.exceptionColor LogColorFormatterConfiguration.assertColor Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class TMPLogColorFormatterConfiguration : LogColorFormatterConfiguration Methods GenerateFormatter() Generates a formatter for TextMeshPro configurers Declaration public override ILogFormatter GenerateFormatter() Returns Type Description ILogFormatter Returns the set up formatter Overrides LogFormatterConfiguration.GenerateFormatter()"
  },
  "api/i5.Toolkit.Core.AppConsole.VisibilityManager.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.VisibilityManager.html",
    "title": "Class VisibilityManager | i5 Toolkit Documentation",
    "keywords": "Class VisibilityManager MonoBehaviour for managing an object's visiblity Inheritance Object VisibilityManager ActivationVisibilityManager Implements IVisibilityManager Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public abstract class VisibilityManager : MonoBehaviour, IVisibilityManager Properties IsVisible Declaration public abstract bool IsVisible { get; set; } Property Value Type Description Boolean Implements IVisibilityManager"
  },
  "api/i5.Toolkit.Core.AppConsole.VisibilitySetter.html": {
    "href": "api/i5.Toolkit.Core.AppConsole.VisibilitySetter.html",
    "title": "Class VisibilitySetter | i5 Toolkit Documentation",
    "keywords": "Class VisibilitySetter Binding component for handling user input and delegating it to the visibility manager Inheritance Object VisibilitySetter Namespace : i5.Toolkit.Core.AppConsole Assembly : cs.temp.dll.dll Syntax public class VisibilitySetter : MonoBehaviour Fields activationKey Declaration public KeyCode activationKey Field Value Type Description KeyCode consoleVisibilityManager Declaration public VisibilityManager consoleVisibilityManager Field Value Type Description VisibilityManager"
  },
  "api/i5.Toolkit.Core.Editor.TestHelpers.EditModeTestUtilities.html": {
    "href": "api/i5.Toolkit.Core.Editor.TestHelpers.EditModeTestUtilities.html",
    "title": "Class EditModeTestUtilities | i5 Toolkit Documentation",
    "keywords": "Class EditModeTestUtilities Inheritance Object EditModeTestUtilities Namespace : i5.Toolkit.Core.Editor.TestHelpers Assembly : cs.temp.dll.dll Syntax public static class EditModeTestUtilities Methods ResetScene() Declaration public static void ResetScene()"
  },
  "api/i5.Toolkit.Core.Editor.TestHelpers.html": {
    "href": "api/i5.Toolkit.Core.Editor.TestHelpers.html",
    "title": "Namespace i5.Toolkit.Core.Editor.TestHelpers | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Editor.TestHelpers Classes EditModeTestUtilities"
  },
  "api/i5.Toolkit.Core.Examples.MeshPoolExample.html": {
    "href": "api/i5.Toolkit.Core.Examples.MeshPoolExample.html",
    "title": "Namespace i5.Toolkit.Core.Examples.MeshPoolExample | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Examples.MeshPoolExample Classes MeshPoolDemo Example that demonstrates that the Mesh pool fixes the memory leak caused by meshes The tester can press F5 to create a mesh or return it to the mesh pool so that it is reused If F6 is pressed, the name of the used mesh is logged Open the performance profile and look at the memory statistics to see if a memory leak exists"
  },
  "api/i5.Toolkit.Core.Examples.MeshPoolExample.MeshPoolDemo.html": {
    "href": "api/i5.Toolkit.Core.Examples.MeshPoolExample.MeshPoolDemo.html",
    "title": "Class MeshPoolDemo | i5 Toolkit Documentation",
    "keywords": "Class MeshPoolDemo Example that demonstrates that the Mesh pool fixes the memory leak caused by meshes The tester can press F5 to create a mesh or return it to the mesh pool so that it is reused If F6 is pressed, the name of the used mesh is logged Open the performance profile and look at the memory statistics to see if a memory leak exists Inheritance Object MeshPoolDemo Namespace : i5.Toolkit.Core.Examples.MeshPoolExample Assembly : cs.temp.dll.dll Syntax public class MeshPoolDemo : MonoBehaviour"
  },
  "api/i5.Toolkit.Core.Examples.ObjImporterExample.html": {
    "href": "api/i5.Toolkit.Core.Examples.ObjImporterExample.html",
    "title": "Namespace i5.Toolkit.Core.Examples.ObjImporterExample | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Examples.ObjImporterExample Classes ObjImporterBootstrapper Bootstrapper which initializes the obj importer service ObjImporterDemo Demo client which allows the tester to import a obj file if F5 is pressed"
  },
  "api/i5.Toolkit.Core.Examples.ObjImporterExample.ObjImporterBootstrapper.html": {
    "href": "api/i5.Toolkit.Core.Examples.ObjImporterExample.ObjImporterBootstrapper.html",
    "title": "Class ObjImporterBootstrapper | i5 Toolkit Documentation",
    "keywords": "Class ObjImporterBootstrapper Bootstrapper which initializes the obj importer service Inheritance Object ObjImporterBootstrapper Namespace : i5.Toolkit.Core.Examples.ObjImporterExample Assembly : cs.temp.dll.dll Syntax public class ObjImporterBootstrapper : BaseServiceBootstrapper Methods RegisterServices() Initializes the obj importer in the service manager Declaration protected override void RegisterServices() UnRegisterServices() Declaration protected override void UnRegisterServices()"
  },
  "api/i5.Toolkit.Core.Examples.ObjImporterExample.ObjImporterDemo.html": {
    "href": "api/i5.Toolkit.Core.Examples.ObjImporterExample.ObjImporterDemo.html",
    "title": "Class ObjImporterDemo | i5 Toolkit Documentation",
    "keywords": "Class ObjImporterDemo Demo client which allows the tester to import a obj file if F5 is pressed Inheritance Object ObjImporterDemo Namespace : i5.Toolkit.Core.Examples.ObjImporterExample Assembly : cs.temp.dll.dll Syntax public class ObjImporterDemo : MonoBehaviour Fields extendedLogging Declaration public bool extendedLogging Field Value Type Description Boolean url Declaration public string url Field Value Type Description String"
  },
  "api/i5.Toolkit.Core.Examples.ServiceExample.DemoAsyncService.html": {
    "href": "api/i5.Toolkit.Core.Examples.ServiceExample.DemoAsyncService.html",
    "title": "Class DemoAsyncService | i5 Toolkit Documentation",
    "keywords": "Class DemoAsyncService Demo for an asynchronous service It prints a statement, waits 5 seconds and then prints another statement Inheritance Object DemoAsyncService Namespace : i5.Toolkit.Core.Examples.ServiceExample Assembly : cs.temp.dll.dll Syntax public class DemoAsyncService : AsyncThreadedWorkerService<Operation<float>> Methods AsyncOperation(Operation<Single>) Declaration protected override void AsyncOperation(Operation<float> operation) Parameters Type Name Description Operation < Single > operation"
  },
  "api/i5.Toolkit.Core.Examples.ServiceExample.DemoBootstrapper.html": {
    "href": "api/i5.Toolkit.Core.Examples.ServiceExample.DemoBootstrapper.html",
    "title": "Class DemoBootstrapper | i5 Toolkit Documentation",
    "keywords": "Class DemoBootstrapper Bootstrapper which populates the service manager with the required services for the service demo Inheritance Object DemoBootstrapper Namespace : i5.Toolkit.Core.Examples.ServiceExample Assembly : cs.temp.dll.dll Syntax public class DemoBootstrapper : BaseServiceBootstrapper Methods RegisterServices() Initializes the service manager with the required services Called by the service manager if it is placed on the same GameObject at the start of the application Declaration protected override void RegisterServices() UnRegisterServices() Declaration protected override void UnRegisterServices()"
  },
  "api/i5.Toolkit.Core.Examples.ServiceExample.DemoService.html": {
    "href": "api/i5.Toolkit.Core.Examples.ServiceExample.DemoService.html",
    "title": "Class DemoService | i5 Toolkit Documentation",
    "keywords": "Class DemoService Demo service which demonstrates how a service can work Inheritance Object DemoService Namespace : i5.Toolkit.Core.Examples.ServiceExample Assembly : cs.temp.dll.dll Syntax public class DemoService : IService Constructors DemoService(String) Initializes the service when before it is added to the service manager Declaration public DemoService(string message) Parameters Type Name Description String message Methods Cleanup() Called if the service is unregistered or the service manager is destroyed Declaration public void Cleanup() GetDemoMessage() Returns a demo message to show that the correct service is accessed Declaration public string GetDemoMessage() Returns Type Description String Initialize(IServiceManager) Called if the service is registered at the service manager Declaration public void Initialize(IServiceManager owner) Parameters Type Name Description IServiceManager owner The service manager where the service is registered"
  },
  "api/i5.Toolkit.Core.Examples.ServiceExample.DemoServiceClient.html": {
    "href": "api/i5.Toolkit.Core.Examples.ServiceExample.DemoServiceClient.html",
    "title": "Class DemoServiceClient | i5 Toolkit Documentation",
    "keywords": "Class DemoServiceClient A demo client which shows how to access services If the tester presses F5, a demo message is logged using hte DemoService and an operation on the DemoAsyncService is triggered Inheritance Object DemoServiceClient Namespace : i5.Toolkit.Core.Examples.ServiceExample Assembly : cs.temp.dll.dll Syntax public class DemoServiceClient : MonoBehaviour"
  },
  "api/i5.Toolkit.Core.Examples.ServiceExample.DemoUpdateService.html": {
    "href": "api/i5.Toolkit.Core.Examples.ServiceExample.DemoUpdateService.html",
    "title": "Class DemoUpdateService | i5 Toolkit Documentation",
    "keywords": "Class DemoUpdateService Demo of an upadteable service Logs the elapsed application's runtime in seconds in regular intervals Inheritance Object DemoUpdateService Namespace : i5.Toolkit.Core.Examples.ServiceExample Assembly : cs.temp.dll.dll Syntax public class DemoUpdateService : IUpdateableService Constructors DemoUpdateService(Single) Initializes the service before it is registered Declaration public DemoUpdateService(float updateInterval) Parameters Type Name Description Single updateInterval The interval in seconds in which the time should be logged Properties Enabled Every updateable service has an Enabled property It this property is set to false, the Update() method is not executed It is recommended to set this to true by default Declaration public bool Enabled { get; set; } Property Value Type Description Boolean Methods Cleanup() Called if the service is unregistered or if the service manager is destroyed Declaration public void Cleanup() Initialize(IServiceManager) Called if the service is registered at the service manager Declaration public void Initialize(IServiceManager owner) Parameters Type Name Description IServiceManager owner The service manager where the service is registered Update() Called every frame by the service manager if this service is registered and enabled Declaration public void Update()"
  },
  "api/i5.Toolkit.Core.Examples.ServiceExample.html": {
    "href": "api/i5.Toolkit.Core.Examples.ServiceExample.html",
    "title": "Namespace i5.Toolkit.Core.Examples.ServiceExample | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Examples.ServiceExample Classes DemoAsyncService Demo for an asynchronous service It prints a statement, waits 5 seconds and then prints another statement DemoBootstrapper Bootstrapper which populates the service manager with the required services for the service demo DemoService Demo service which demonstrates how a service can work DemoServiceClient A demo client which shows how to access services If the tester presses F5, a demo message is logged using hte DemoService and an operation on the DemoAsyncService is triggered DemoUpdateService Demo of an upadteable service Logs the elapsed application's runtime in seconds in regular intervals"
  },
  "api/i5.Toolkit.Core.ModelImporters.html": {
    "href": "api/i5.Toolkit.Core.ModelImporters.html",
    "title": "Namespace i5.Toolkit.Core.ModelImporters | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.ModelImporters Classes MtlLibrary Class for parsing and storing material libraries from .mtl files ObjImporter Service for importing and parsing .obj files ObjParseResult Result of one sub-object of a parsing operation for a .obj file Structs VertexData Stores data for one vertex"
  },
  "api/i5.Toolkit.Core.ModelImporters.MtlLibrary.html": {
    "href": "api/i5.Toolkit.Core.ModelImporters.MtlLibrary.html",
    "title": "Class MtlLibrary | i5 Toolkit Documentation",
    "keywords": "Class MtlLibrary Class for parsing and storing material libraries from .mtl files Inheritance Object MtlLibrary Namespace : i5.Toolkit.Core.ModelImporters Assembly : cs.temp.dll.dll Syntax public class MtlLibrary Constructors MtlLibrary() Constructor Declaration public MtlLibrary() Properties ContentLoader Gets or sets the module which loads the .mtl files Declaration public IContentLoader<string> ContentLoader { get; set; } Property Value Type Description IContentLoader < String > ExtendedLogging If set to true, the service will log additional information, e.g. comments in the .mtl file Declaration public bool ExtendedLogging { get; set; } Property Value Type Description Boolean Methods GetMaterialConstructor(String, String) Returns a material from a library as a material constructor instance Declaration public MaterialConstructor GetMaterialConstructor(string materialLibrary, string materialName) Parameters Type Name Description String materialLibrary The library name which contains the material String materialName The name of the material in the library Returns Type Description MaterialConstructor Returns a material constructor that resembles the material; returns null if the libarary or material does not exist LibraryLoaded(String) Returns true if the library with the given name was loaded Declaration public bool LibraryLoaded(string name) Parameters Type Name Description String name The name of the library Returns Type Description Boolean Returns true if the library was loaded LoadLibraryAsyc(Uri, String) Asynchronously loads a material library from the specified URI Declaration public Task<bool> LoadLibraryAsyc(Uri uri, string libraryName) Parameters Type Name Description Uri uri Full uri to the .mtl file String libraryName The name of the library Returns Type Description Task < Boolean > Returns true if the library could be loaded"
  },
  "api/i5.Toolkit.Core.ModelImporters.ObjImporter.html": {
    "href": "api/i5.Toolkit.Core.ModelImporters.ObjImporter.html",
    "title": "Class ObjImporter | i5 Toolkit Documentation",
    "keywords": "Class ObjImporter Service for importing and parsing .obj files Inheritance Object ObjImporter Namespace : i5.Toolkit.Core.ModelImporters Assembly : cs.temp.dll.dll Syntax public class ObjImporter : IService Properties ContentLoader Module that should be used for fetching the .obj file's content Declaration public IContentLoader<string> ContentLoader { get; set; } Property Value Type Description IContentLoader < String > ExtendedLogging If set to true, additional information, e.g. comments in the .obj file, are logged Declaration public bool ExtendedLogging { get; set; } Property Value Type Description Boolean MtlLibrary instance of the MtlLibrary Declaration public MtlLibrary MtlLibrary { get; } Property Value Type Description MtlLibrary Methods Cleanup() Called by the service manager to clean up the service if it is stopped Declaration public void Cleanup() ImportAsync(String) Asynchronously imports the given .obj file from the specified url Declaration public Task<GameObject> ImportAsync(string url) Parameters Type Name Description String url The url to the .obj file Returns Type Description Task < GameObject > The GameObject that was created for the imported .obj Initialize(IServiceManager) Called by the service manager to initialize the service if it is started Declaration public void Initialize(IServiceManager owner) Parameters Type Name Description IServiceManager owner The service manager that owns this service"
  },
  "api/i5.Toolkit.Core.ModelImporters.ObjParseResult.html": {
    "href": "api/i5.Toolkit.Core.ModelImporters.ObjParseResult.html",
    "title": "Class ObjParseResult | i5 Toolkit Documentation",
    "keywords": "Class ObjParseResult Result of one sub-object of a parsing operation for a .obj file Inheritance Object ObjParseResult Namespace : i5.Toolkit.Core.ModelImporters Assembly : cs.temp.dll.dll Syntax public class ObjParseResult Constructors ObjParseResult() Creates a new parse result Declaration public ObjParseResult() Properties LibraryPath Path to the material library that is used for the sub-object Declaration public string LibraryPath { get; set; } Property Value Type Description String MaterialName Name of the material which is used for the sub-object Declaration public string MaterialName { get; set; } Property Value Type Description String ObjectConstructor An object constructor which was for the sub-object Declaration public ObjectConstructor ObjectConstructor { get; } Property Value Type Description ObjectConstructor"
  },
  "api/i5.Toolkit.Core.ModelImporters.VertexData.html": {
    "href": "api/i5.Toolkit.Core.ModelImporters.VertexData.html",
    "title": "Struct VertexData | i5 Toolkit Documentation",
    "keywords": "Struct VertexData Stores data for one vertex Namespace : i5.Toolkit.Core.ModelImporters Assembly : cs.temp.dll.dll Syntax public struct VertexData Constructors VertexData(Int32) Creates a vertex data object with the vertex index only Declaration public VertexData(int vertexIndex) Parameters Type Name Description Int32 vertexIndex The index of the vertex VertexData(Int32, Int32) Creates a vertex data object where the vertex index and normal vector index are set Declaration public VertexData(int vertexIndex, int normalVectorIndex) Parameters Type Name Description Int32 vertexIndex The index of the vertex Int32 normalVectorIndex The index of the vertex in the normal vector array VertexData(Int32, Int32, Int32) Creates a vertex data object where the vertex index, uv index and normal vector index are set Declaration public VertexData(int vertexIndex, int uvIndex, int normalVectorIndex) Parameters Type Name Description Int32 vertexIndex The index of the vertex Int32 uvIndex The index of the vertex in the UV layout Int32 normalVectorIndex The index of the vertex in the normal vector array Fields normalVectorIndex The index in the normal vector array Declaration public int normalVectorIndex Field Value Type Description Int32 uvIndex The index in the UV layout Declaration public int uvIndex Field Value Type Description Int32 vertexIndex The index of the vertex Declaration public int vertexIndex Field Value Type Description Int32 Properties UseNormalVectorIndex True if the normal vector index is set Declaration public bool UseNormalVectorIndex { get; } Property Value Type Description Boolean UseUvIndex True if the UV index is set Declaration public bool UseUvIndex { get; } Property Value Type Description Boolean Methods Equals(Object) Checks if two vertex data objects are equal Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The other vertex data object Returns Type Description Boolean True if the vertex data objects resemble the same vertex Overrides ValueType.Equals(Object) GetHashCode() Gets a hash code for the vertex data object Declaration public override int GetHashCode() Returns Type Description Int32 Returns a hash code for the vertex data object Overrides ValueType.GetHashCode()"
  },
  "api/i5.Toolkit.Core.Modified3DObjects.html": {
    "href": "api/i5.Toolkit.Core.Modified3DObjects.html",
    "title": "Namespace i5.Toolkit.Core.Modified3DObjects | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Modified3DObjects Classes RoundedCorners Constructs a rounded 3D rectangle with depth"
  },
  "api/i5.Toolkit.Core.Modified3DObjects.RoundedCorners.html": {
    "href": "api/i5.Toolkit.Core.Modified3DObjects.RoundedCorners.html",
    "title": "Class RoundedCorners | i5 Toolkit Documentation",
    "keywords": "Class RoundedCorners Constructs a rounded 3D rectangle with depth Inheritance Object RoundedCorners Namespace : i5.Toolkit.Core.Modified3DObjects Assembly : cs.temp.dll.dll Syntax public class RoundedCorners : MonoBehaviour Fields cornerRadius Declaration public float cornerRadius Field Value Type Description Single depth Declaration public float depth Field Value Type Description Single exactColliders Declaration public bool exactColliders Field Value Type Description Boolean height Declaration public float height Field Value Type Description Single subdivisions Declaration public int subdivisions Field Value Type Description Int32 width Declaration public float width Field Value Type Description Single"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.ClientData.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.ClientData.html",
    "title": "Class ClientData | i5 Toolkit Documentation",
    "keywords": "Class ClientData Describes configurations of client data Inheritance Object ClientData Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class ClientData Constructors ClientData(String, String) Creates a new client data instance with the given parameters Declaration public ClientData(string clientId, string clientSecret) Parameters Type Name Description String clientId The id of the client that is registered at the provider String clientSecret The secret of the client that was issued by the provider Properties ClientId The id of the client that is registered at the provider Declaration public string ClientId { get; } Property Value Type Description String ClientSecret The secret of the client that was issued by the provider Declaration public string ClientSecret { get; } Property Value Type Description String"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.ClientDataObject.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.ClientDataObject.html",
    "title": "Class ClientDataObject | i5 Toolkit Documentation",
    "keywords": "Class ClientDataObject Scriptable object for storing client data in the assets folder as a separate file This is used so that the client data can be specified and put into a .gitignore file so that they are not uploaded in public repositories, e.g. on GitHub Inheritance Object ClientDataObject Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class ClientDataObject : ScriptableObject Fields clientData The credentials of the client so that it is accepted by the OpenID Connect provider Declaration public ClientData clientData Field Value Type Description ClientData"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.html",
    "title": "Namespace i5.Toolkit.Core.OpenIDConnectClient | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.OpenIDConnectClient Classes ClientData Describes configurations of client data ClientDataObject Scriptable object for storing client data in the assets folder as a separate file This is used so that the client data can be specified and put into a .gitignore file so that they are not uploaded in public repositories, e.g. on GitHub LearningLayersAuthorizationFlowAnswer Data description of the answer that is received after the access token was requested in the authorization flow LearningLayersOIDCProvider Implementation of the OpenID Connect Learning Layers Provider More information can be found here: https://api.learning-layers.eu/o/oauth2/ LearningLayersUserInfo Description of the user information data for the Learning Layers client OpenIDConnectService Service that implements the OpenID Connect authentification PostBuildOidcPatcher RedirectReceivedEventArgs Event arguments for the redirect event RedirectServerListener Implementation of a server that serves the redirect after the OpenID Connect login Interfaces IOidcProvider Contract that specifies the capabilities of an OpenID Connect provider IRedirectServerListener Contract which specifies the capabilities of the server that listens for redirects IUserInfo Contract specifying how user information that can be accessed from an OIDC provider"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.IOidcProvider.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.IOidcProvider.html",
    "title": "Interface IOidcProvider | i5 Toolkit Documentation",
    "keywords": "Interface IOidcProvider Contract that specifies the capabilities of an OpenID Connect provider Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public interface IOidcProvider Properties AuthorizationFlow Gets the authorization flow that should be used for the provider Declaration AuthorizationFlow AuthorizationFlow { get; } Property Value Type Description AuthorizationFlow ClientData Client data that are required to authorize the client at the provider Declaration ClientData ClientData { get; set; } Property Value Type Description ClientData RestConnector Specifies how the REST API of the Web service is accessed Declaration IRestConnector RestConnector { get; set; } Property Value Type Description IRestConnector Methods CheckAccessTokenAsync(String) Checks if the access token is valid by checking it at the provider Declaration Task<bool> CheckAccessTokenAsync(string accessToken) Parameters Type Name Description String accessToken The access token that should be checked Returns Type Description Task < Boolean > True if the access token is valid, otherwise false GetAccessToken(Dictionary<String, String>) Gets the access token from a list of parameters in a Web answer Declaration string GetAccessToken(Dictionary<string, string> redirectParameters) Parameters Type Name Description Dictionary < String , String > redirectParameters The parameters of the Web answer as a dictionary Returns Type Description String Returns the access token if it exists in the parameters, otherwise an empty string is returned GetAccessTokenFromCodeAsync(String, String) Gets the access token based on a previously retrieved authorization code Declaration Task<string> GetAccessTokenFromCodeAsync(string code, string redirectUri) Parameters Type Name Description String code The authorization code String redirectUri The redirect URI which was used during the login Returns Type Description Task < String > Returns the access token if it could be retrieved; otherwise it returns an empty string GetAuthorizationCode(Dictionary<String, String>) Extracts the authorization code from parameters of a Web answer Declaration string GetAuthorizationCode(Dictionary<string, string> redirectParameters) Parameters Type Name Description Dictionary < String , String > redirectParameters Parameters of a Web answer as a dictionary Returns Type Description String The authorization code if it could be found, otherwise an empty string is returned GetUserInfoAsync(String) Gets information about the logged in user from the provider Declaration Task<IUserInfo> GetUserInfoAsync(string accessToken) Parameters Type Name Description String accessToken The access token to authenticate the user Returns Type Description Task < IUserInfo > Returns information about the logged in user if the request was successful, otherwise null OpenLoginPage(String[], String) Opens the provider's login page in the system's default Web browser Declaration void OpenLoginPage(string[] scopes, string redirectUri) Parameters Type Name Description String [] scopes The OpenID Connect scopes that the user must agree to String redirectUri The URI to which the browser should redirect after the successful login ParametersContainError(Dictionary<String, String>, out String) Checks if the provider included error messages in the parameters of a Web answer Declaration bool ParametersContainError(Dictionary<string, string> parameters, out string errorMessage) Parameters Type Name Description Dictionary < String , String > parameters The parameters of a Web answer as a dictionary String errorMessage The error message that the provider included, empty if no error exists Returns Type Description Boolean Returns true if the parameters contain an error message, otherwise false"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.IRedirectServerListener.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.IRedirectServerListener.html",
    "title": "Interface IRedirectServerListener | i5 Toolkit Documentation",
    "keywords": "Interface IRedirectServerListener Contract which specifies the capabilities of the server that listens for redirects Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public interface IRedirectServerListener Properties ListeningUri Declaration string ListeningUri { get; set; } Property Value Type Description String ResponseString The HTML string which is send as an answer if a request is made to the server Declaration string ResponseString { get; set; } Property Value Type Description String ServerActive If true, the server is currently active Declaration bool ServerActive { get; } Property Value Type Description Boolean Methods GenerateListeningUri(String) Generates and sets a redirect URI with a free port on which the server will listen once it is started Declaration string GenerateListeningUri(string protocol = \"http\") Parameters Type Name Description String protocol The URI schema that the URI should use Returns Type Description String Returns a URI with a free port on which the server can listen StartServer() Starts the server Declaration void StartServer() StopServerImmediately() Stops the server immediately, aborting its current operation Declaration void StopServerImmediately() Events RedirectReceived Event which is invoked once a redirect has been received Declaration event EventHandler<RedirectReceivedEventArgs> RedirectReceived Event Type Type Description EventHandler < RedirectReceivedEventArgs >"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.IUserInfo.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.IUserInfo.html",
    "title": "Interface IUserInfo | i5 Toolkit Documentation",
    "keywords": "Interface IUserInfo Contract specifying how user information that can be accessed from an OIDC provider Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public interface IUserInfo Properties Email The email address of the logged in user Declaration string Email { get; } Property Value Type Description String FullName The full name of the logged in user Declaration string FullName { get; } Property Value Type Description String Username The user name of the logged in user Declaration string Username { get; } Property Value Type Description String"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.LearningLayersAuthorizationFlowAnswer.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.LearningLayersAuthorizationFlowAnswer.html",
    "title": "Class LearningLayersAuthorizationFlowAnswer | i5 Toolkit Documentation",
    "keywords": "Class LearningLayersAuthorizationFlowAnswer Data description of the answer that is received after the access token was requested in the authorization flow Inheritance Object LearningLayersAuthorizationFlowAnswer Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class LearningLayersAuthorizationFlowAnswer Fields access_token Declaration public string access_token Field Value Type Description String error Declaration public string error Field Value Type Description String error_description Declaration public string error_description Field Value Type Description String expires_in Declaration public int expires_in Field Value Type Description Int32 id_token Declaration public string id_token Field Value Type Description String scope Declaration public string scope Field Value Type Description String token_type Declaration public string token_type Field Value Type Description String"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.LearningLayersOIDCProvider.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.LearningLayersOIDCProvider.html",
    "title": "Class LearningLayersOIDCProvider | i5 Toolkit Documentation",
    "keywords": "Class LearningLayersOIDCProvider Implementation of the OpenID Connect Learning Layers Provider More information can be found here: https://api.learning-layers.eu/o/oauth2/ Inheritance Object LearningLayersOIDCProvider Implements IOidcProvider Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class LearningLayersOIDCProvider : IOidcProvider Constructors LearningLayersOIDCProvider() Creates a new instance of the learning layers client Declaration public LearningLayersOIDCProvider() Properties AuthorizationFlow Gets or sets the used authorization flow Declaration public AuthorizationFlow AuthorizationFlow { get; set; } Property Value Type Description AuthorizationFlow Browser The implementation that should accesss the browser Declaration public IBrowser Browser { get; set; } Property Value Type Description IBrowser ClientData Client data that are required to authorize the client at the provider Declaration public ClientData ClientData { get; set; } Property Value Type Description ClientData JsonSerializer Serializer that is responsible for parsing JSON data and converting to JSON Declaration public IJsonSerializer JsonSerializer { get; set; } Property Value Type Description IJsonSerializer RestConnector Specifies how the REST API of the Web service is accessed Declaration public IRestConnector RestConnector { get; set; } Property Value Type Description IRestConnector Methods CheckAccessTokenAsync(String) Checks if the access token is valid by checking it at the Learning Layers provider Declaration public Task<bool> CheckAccessTokenAsync(string accessToken) Parameters Type Name Description String accessToken The access token that should be checked Returns Type Description Task < Boolean > True if the access token is valid, otherwise false GetAccessToken(Dictionary<String, String>) Gets the access token from a list of parameters in a Web answer Declaration public string GetAccessToken(Dictionary<string, string> redirectParameters) Parameters Type Name Description Dictionary < String , String > redirectParameters The parameters of the Web answer as a dictionary Returns Type Description String Returns the access token if it exists in the parameters, otherwise an empty string is returned GetAccessTokenFromCodeAsync(String, String) Gets the access token based on a previously retrieved authorization code Declaration public Task<string> GetAccessTokenFromCodeAsync(string code, string redirectUri) Parameters Type Name Description String code The authorization code String redirectUri The redirect URI which was used during the login Returns Type Description Task < String > Returns the access token if it could be retrieved; otherwise it returns an empty string GetAuthorizationCode(Dictionary<String, String>) Extracts the authorization code from parameters of a Web answer Declaration public string GetAuthorizationCode(Dictionary<string, string> redirectParameters) Parameters Type Name Description Dictionary < String , String > redirectParameters Parameters of a Web answer as a dictionary Returns Type Description String The authorization code if it could be found, otherwise an empty string is returned GetUserInfoAsync(String) Gets information about the logged in user from the learning layers provider Declaration public Task<IUserInfo> GetUserInfoAsync(string accessToken) Parameters Type Name Description String accessToken The access token to authenticate the user Returns Type Description Task < IUserInfo > Returns information about the logged in user if the request was successful, otherwise null OpenLoginPage(String[], String) Opens the Learning Layers login page in the system's default Web browser Declaration public void OpenLoginPage(string[] scopes, string redirectUri) Parameters Type Name Description String [] scopes The OpenID Connect scopes that the user must agree to String redirectUri The URI to which the browser should redirect after the successful login ParametersContainError(Dictionary<String, String>, out String) Checks if the provider included error messages in the parameters of a Web answer Declaration public bool ParametersContainError(Dictionary<string, string> parameters, out string errorMessage) Parameters Type Name Description Dictionary < String , String > parameters The parameters of a Web answer as a dictionary String errorMessage The error message that the provider included, empty if no error exists Returns Type Description Boolean Returns true if the parameters contain an error message, otherwise false Implements IOidcProvider"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.LearningLayersUserInfo.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.LearningLayersUserInfo.html",
    "title": "Class LearningLayersUserInfo | i5 Toolkit Documentation",
    "keywords": "Class LearningLayersUserInfo Description of the user information data for the Learning Layers client Inheritance Object LearningLayersUserInfo Implements IUserInfo Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class LearningLayersUserInfo : IUserInfo Constructors LearningLayersUserInfo(String, String, String) Creates a new instance of the learning layers user info with the given parameters Declaration public LearningLayersUserInfo(string username, string email, string fullName) Parameters Type Name Description String username The user name of the user String email The email address of the user String fullName The full name of the user Properties Email The email address of the user This is a mapping based on the available user data of the OIDC provider Declaration public string Email { get; } Property Value Type Description String FullName A clear name of the user This is a mapping based on the available user data of the OIDC provider Declaration public string FullName { get; } Property Value Type Description String Username The username of the user This is a mapping based on the available user data of the OIDC provider Declaration public string Username { get; } Property Value Type Description String Implements IUserInfo"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.OpenIDConnectService.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.OpenIDConnectService.html",
    "title": "Class OpenIDConnectService | i5 Toolkit Documentation",
    "keywords": "Class OpenIDConnectService Service that implements the OpenID Connect authentification Inheritance Object OpenIDConnectService Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class OpenIDConnectService : IUpdateableService Constructors OpenIDConnectService() Creates a new instance of the OpenID Connect service Declaration public OpenIDConnectService() Properties AccessToken The access token of the logged in user Use this token to access data about the user or to access protected Web resources Declaration public string AccessToken { get; } Property Value Type Description String Enabled If set to true, the Update method will be executed every frame Declaration public bool Enabled { get; set; } Property Value Type Description Boolean IsLoggedIn Is true if the user of the application is currently logged in Declaration public bool IsLoggedIn { get; } Property Value Type Description Boolean OidcProvider The provider that should be used for the OpenID Connect procedure Declaration public IOidcProvider OidcProvider { get; set; } Property Value Type Description IOidcProvider RedirectURI The URI which should be shown to the user after the login For UWP and Android apps, change the Uri schema to something unique and also change it in the project settings This way, the app will be opened again on the redirect. If this URI is not set, a standard page is shown. Declaration public string RedirectURI { get; set; } Property Value Type Description String Scopes List of scopes that the user must agree to and which give the client access to specific data Declaration public string[] Scopes { get; set; } Property Value Type Description String [] ServerListener A server listener implementation that listens for the redirect Declaration public IRedirectServerListener ServerListener { get; set; } Property Value Type Description IRedirectServerListener Methods CheckAccessToken() Checks if the access token is valid Declaration public Task<bool> CheckAccessToken() Returns Type Description Task < Boolean > Returns true if the access token could be verified at the provider Cleanup() Called by the service manager once the service is unregistered Stops the server if it is running and logs the user out Declaration public void Cleanup() GetUserDataAsync() Gets the user's information Declaration public Task<IUserInfo> GetUserDataAsync() Returns Type Description Task < IUserInfo > Returns user data from the OIDC provider Initialize(IServiceManager) Initialization which is called by the server manager once the service is registered Declaration public void Initialize(IServiceManager owner) Parameters Type Name Description IServiceManager owner The service manager that owns this service Logout() Logs the user out Declaration public void Logout() OpenLoginPage() Opens a login page in the system's default browser so that the user can log in Requires a configured OpenID Connect provider Declaration public void OpenLoginPage() ServerListener_RedirectReceived(Object, RedirectReceivedEventArgs) Called by the server listener once a redirect was received Declaration public void ServerListener_RedirectReceived(object sender, RedirectReceivedEventArgs e) Parameters Type Name Description Object sender The sender of the event RedirectReceivedEventArgs e The arguments of the redirect event Update() Called each frame by the service manager Handles the redirect processing on the main thread Declaration public void Update() Events LoginCompleted Event which is raised once the login was successfully completed Declaration public event EventHandler LoginCompleted Event Type Type Description EventHandler LogoutCompleted Event which is reaised once the logout was completed Declaration public event EventHandler LogoutCompleted Event Type Type Description EventHandler"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.PostBuildOidcPatcher.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.PostBuildOidcPatcher.html",
    "title": "Class PostBuildOidcPatcher | i5 Toolkit Documentation",
    "keywords": "Class PostBuildOidcPatcher Inheritance Object PostBuildOidcPatcher Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class PostBuildOidcPatcher"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.RedirectReceivedEventArgs.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.RedirectReceivedEventArgs.html",
    "title": "Class RedirectReceivedEventArgs | i5 Toolkit Documentation",
    "keywords": "Class RedirectReceivedEventArgs Event arguments for the redirect event Inheritance Object RedirectReceivedEventArgs Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class RedirectReceivedEventArgs : EventArgs Constructors RedirectReceivedEventArgs(Dictionary<String, String>, String) Creates a new instance of the redirect event arguments Declaration public RedirectReceivedEventArgs(Dictionary<string, string> requestParameters, string redirectUri) Parameters Type Name Description Dictionary < String , String > requestParameters The parameters that were given in the redirect String redirectUri The URI to which the redirect lead Properties RedirectParameters The parameters that were given in the redirect Declaration public Dictionary<string, string> RedirectParameters { get; } Property Value Type Description Dictionary < String , String > RedirectUri The URI to which the redirect lead Declaration public string RedirectUri { get; } Property Value Type Description String"
  },
  "api/i5.Toolkit.Core.OpenIDConnectClient.RedirectServerListener.html": {
    "href": "api/i5.Toolkit.Core.OpenIDConnectClient.RedirectServerListener.html",
    "title": "Class RedirectServerListener | i5 Toolkit Documentation",
    "keywords": "Class RedirectServerListener Implementation of a server that serves the redirect after the OpenID Connect login Inheritance Object RedirectServerListener Implements IRedirectServerListener Namespace : i5.Toolkit.Core.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class RedirectServerListener : IRedirectServerListener Constructors RedirectServerListener() Creates a new instance of the RedirectServerListener Declaration public RedirectServerListener() Properties ListeningUri The URI whrere the server listens for the redirect Declaration public string ListeningUri { get; set; } Property Value Type Description String ResponseString HTML response that is given on the redirect request Declaration public string ResponseString { get; set; } Property Value Type Description String ServerActive True if the server is active Declaration public bool ServerActive { get; } Property Value Type Description Boolean Methods GenerateListeningUri(String) Generates a redirect URI where the server can listen for the redirect Declaration public string GenerateListeningUri(string protocol = \"http\") Parameters Type Name Description String protocol Specify a custom URI schema. If the app version of this registers as a handler for the URI schema, the app will be opened again. Returns Type Description String Returns a free URI where the server can listen StartServer() Starts the server Declaration public void StartServer() StopServerImmediately() Stops the server immediately and aborts the current operation Declaration public void StopServerImmediately() Events RedirectReceived Event which is raised once a redirect is received Declaration public event EventHandler<RedirectReceivedEventArgs> RedirectReceived Event Type Type Description EventHandler < RedirectReceivedEventArgs > Implements IRedirectServerListener"
  },
  "api/i5.Toolkit.Core.ProceduralGeometry.GeometryConstructor.html": {
    "href": "api/i5.Toolkit.Core.ProceduralGeometry.GeometryConstructor.html",
    "title": "Class GeometryConstructor | i5 Toolkit Documentation",
    "keywords": "Class GeometryConstructor Utility class which guides the construction of meshes Provides helper methods to register vertices and create faces of different shapes Inheritance Object GeometryConstructor Namespace : i5.Toolkit.Core.ProceduralGeometry Assembly : cs.temp.dll.dll Syntax public class GeometryConstructor Constructors GeometryConstructor() Creates the geometry constructor to buid the mesh data You can only add geometry, not remove it Declaration public GeometryConstructor() Properties Name The name of the produced mesh Declaration public string Name { get; set; } Property Value Type Description String Normals Manually set normals Declaration public List<Vector3> Normals { get; } Property Value Type Description List < Vector3 > Triangles The triangles/faces of the geometry object Declaration public List<int> Triangles { get; } Property Value Type Description List < Int32 > UVCoords Manually set UV coords Declaration public List<Vector2> UVCoords { get; } Property Value Type Description List < Vector2 > Vertices The vertices of the geometry object Declaration public List<Vector3> Vertices { get; } Property Value Type Description List < Vector3 > Methods AddQuad(Int32, Int32, Int32, Int32, Boolean) Adds a quad to the geometry (by adding two triangles) List the four vertices in clockwise order as seen from the outside The diagonal will be created between the first and third vertex The indices must exist in the geometry, i.e. they first need to be added using AddVertex() Declaration public void AddQuad(int v0, int v1, int v2, int v3, bool flipNormals = false) Parameters Type Name Description Int32 v0 Index of vertex 1 Int32 v1 Index of vertex 2 Int32 v2 Index of vertex 3 Int32 v3 Index of vertex 4 Boolean flipNormals If set to true, the quad will face the other way AddTriangle(Int32, Int32, Int32, Boolean) Adds a triangle to the geometry List the three vertices in clockwise order as seen from the outside The indices must exist in the geometry, i.e. they first need to be added using AddVertex() Declaration public void AddTriangle(int v0, int v1, int v2, bool flipNormal = false) Parameters Type Name Description Int32 v0 Index of vertex 1 Int32 v1 Index of vertex 2 Int32 v2 Index of vertex 3 Boolean flipNormal If set to true, the triangle will face the other way AddTriangleFan(Int32, Int32[], Boolean) Adds a fan of triangles to the geometry List the otherVertices clockwise The indices must exist in the geometry, i.e. they first need to be added using AddVertex() Declaration public void AddTriangleFan(int poleVertex, int[] otherVertices, bool flipNormals = false) Parameters Type Name Description Int32 poleVertex The pole vertex which is connected to all other vertices of the fan Int32 [] otherVertices The vertices which span the fan Boolean flipNormals If set to true, the triangle fan will face the other way AddVertex(Vector3) Adds a disconnected, unnamed vertex to the geometry Declaration public int AddVertex(Vector3 coordinates) Parameters Type Name Description Vector3 coordinates The coordinates of the vertex Returns Type Description Int32 The index of the created vertex AddVertex(Vector3, Vector2) Adds a disconnected vertex to the geometry with the given coordinates and UV coordinates Declaration public int AddVertex(Vector3 coordinates, Vector2 uvCoordinates) Parameters Type Name Description Vector3 coordinates The 3D coordinates of the vertex Vector2 uvCoordinates The texture UV coordinates of the vertex Returns Type Description Int32 Returns the index of the created vertex AddVertex(Vector3, Vector2, Vector3) Adds a disconnected vertex to the geometry with the given coordinates, UV coordinates and normal vector Declaration public int AddVertex(Vector3 coordinates, Vector2 uvCoordinates, Vector3 normalVector) Parameters Type Name Description Vector3 coordinates The 3D coordinates of the vertex Vector2 uvCoordinates The texture UV coordinates of the vertex Vector3 normalVector The normal vector of the vertex Returns Type Description Int32 Returns the index of the created vertex AddVertex(Vector3, Vector3) Adds a disconnected vertex to the geometry with a given normal vector The normal vector is only used if a normal vector is supplied for every vertex Declaration public int AddVertex(Vector3 coordinates, Vector3 normalVector) Parameters Type Name Description Vector3 coordinates The coordinates of the vertex Vector3 normalVector The normal vector which should be used Returns Type Description Int32 The index of the created vertex ConstructMesh() Builds a mesh from the constructed geometry data Declaration public Mesh ConstructMesh() Returns Type Description Mesh The constructed mesh which is described by these geometry data"
  },
  "api/i5.Toolkit.Core.ProceduralGeometry.html": {
    "href": "api/i5.Toolkit.Core.ProceduralGeometry.html",
    "title": "Namespace i5.Toolkit.Core.ProceduralGeometry | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.ProceduralGeometry Classes GeometryConstructor Utility class which guides the construction of meshes Provides helper methods to register vertices and create faces of different shapes MaterialConstructor Construction object to store properties of materials to create them later ObjectConstructor Class for constructing objects on demand TextureConstructor Constructs a texture by fetching it from the Web Interfaces ITextureConstructor Interface for texture constructors"
  },
  "api/i5.Toolkit.Core.ProceduralGeometry.ITextureConstructor.html": {
    "href": "api/i5.Toolkit.Core.ProceduralGeometry.ITextureConstructor.html",
    "title": "Interface ITextureConstructor | i5 Toolkit Documentation",
    "keywords": "Interface ITextureConstructor Interface for texture constructors Namespace : i5.Toolkit.Core.ProceduralGeometry Assembly : cs.temp.dll.dll Syntax public interface ITextureConstructor Methods FetchTextureAsync() Asynchronously fetches a texture Declaration Task<Texture2D> FetchTextureAsync() Returns Type Description Task < Texture2D >"
  },
  "api/i5.Toolkit.Core.ProceduralGeometry.MaterialConstructor.html": {
    "href": "api/i5.Toolkit.Core.ProceduralGeometry.MaterialConstructor.html",
    "title": "Class MaterialConstructor | i5 Toolkit Documentation",
    "keywords": "Class MaterialConstructor Construction object to store properties of materials to create them later Inheritance Object MaterialConstructor Namespace : i5.Toolkit.Core.ProceduralGeometry Assembly : cs.temp.dll.dll Syntax public class MaterialConstructor Constructors MaterialConstructor() Initializes the material constructor with default values Declaration public MaterialConstructor() MaterialConstructor(String) Initializes the material constructor with a given shader Declaration public MaterialConstructor(string shaderName) Parameters Type Name Description String shaderName The name of the shader Properties Color The main color of the material Declaration public Color Color { get; set; } Property Value Type Description Color Name The name of the material Declaration public string Name { get; set; } Property Value Type Description String ShaderName The name of the shader that the material should use Declaration public string ShaderName { get; set; } Property Value Type Description String Methods ConstructMaterial() Constructs a material from the specified data in this constructor Declaration public Material ConstructMaterial() Returns Type Description Material Returns the constructed material FetchDependencies() Fetches any dependencies of the material, e.g. textures Call this method before constructing the material Declaration public Task<bool> FetchDependencies() Returns Type Description Task < Boolean > True if all dependencies could be fetched SetFloat(String, Single) Sets a float property in the material Declaration public void SetFloat(string name, float value) Parameters Type Name Description String name The name of the float property in the shader Single value The value of the float property SetTexture(String, ITextureConstructor) Sets a texture request for the material Declaration public void SetTexture(string name, ITextureConstructor value) Parameters Type Name Description String name The name of the texture property in the shader ITextureConstructor value The texture constructor which fetches the texture"
  },
  "api/i5.Toolkit.Core.ProceduralGeometry.ObjectConstructor.html": {
    "href": "api/i5.Toolkit.Core.ProceduralGeometry.ObjectConstructor.html",
    "title": "Class ObjectConstructor | i5 Toolkit Documentation",
    "keywords": "Class ObjectConstructor Class for constructing objects on demand Inheritance Object ObjectConstructor Namespace : i5.Toolkit.Core.ProceduralGeometry Assembly : cs.temp.dll.dll Syntax public class ObjectConstructor Constructors ObjectConstructor() Creates the object constructor with empty geometry and material constructors Declaration public ObjectConstructor() ObjectConstructor(GeometryConstructor) Creates the object constructor with the given geometry constructor Declaration public ObjectConstructor(GeometryConstructor geometryConstructor) Parameters Type Name Description GeometryConstructor geometryConstructor Geometry constructor to initialize the object ObjectConstructor(GeometryConstructor, MaterialConstructor) Creates the object constructor with the given geometry and material constructors Declaration public ObjectConstructor(GeometryConstructor geometryConstructor, MaterialConstructor material) Parameters Type Name Description GeometryConstructor geometryConstructor Geometry constructor to initialize the object MaterialConstructor material Material constructor to initialize the object Properties GeometryConstructor Constructor which defines the object's geometry Declaration public GeometryConstructor GeometryConstructor { get; set; } Property Value Type Description GeometryConstructor MaterialConstructor Constructor which defines the object's material Declaration public MaterialConstructor MaterialConstructor { get; set; } Property Value Type Description MaterialConstructor Methods ConstructObject(Transform) Constructs a GameObject and populates it with the mesh of the geometry constructor and the material of the material constructor Declaration public GameObject ConstructObject(Transform parent = null) Parameters Type Name Description Transform parent Optional; Parents the GameObject to the specified transform Returns Type Description GameObject Returns the created GameObject"
  },
  "api/i5.Toolkit.Core.ProceduralGeometry.TextureConstructor.html": {
    "href": "api/i5.Toolkit.Core.ProceduralGeometry.TextureConstructor.html",
    "title": "Class TextureConstructor | i5 Toolkit Documentation",
    "keywords": "Class TextureConstructor Constructs a texture by fetching it from the Web Inheritance Object TextureConstructor Implements ITextureConstructor Namespace : i5.Toolkit.Core.ProceduralGeometry Assembly : cs.temp.dll.dll Syntax public class TextureConstructor : ITextureConstructor Constructors TextureConstructor(String) Creates a texture constructor with the given load path Declaration public TextureConstructor(string loadPath) Parameters Type Name Description String loadPath The path where the texture is stored Properties LoadPath The path where the texture is stored Declaration public string LoadPath { get; set; } Property Value Type Description String TextureLoader Module which loads the object Declaration public IContentLoader<Texture2D> TextureLoader { get; set; } Property Value Type Description IContentLoader < Texture2D > Methods FetchTextureAsync() Fetches the texture from the Web based on the LoadPath Declaration public Task<Texture2D> FetchTextureAsync() Returns Type Description Task < Texture2D > Returns the fetched texture or null if something went wrong Implements ITextureConstructor"
  },
  "api/i5.Toolkit.Core.SceneDocumentation.DocumentationObject.html": {
    "href": "api/i5.Toolkit.Core.SceneDocumentation.DocumentationObject.html",
    "title": "Class DocumentationObject | i5 Toolkit Documentation",
    "keywords": "Class DocumentationObject A special component which provides documentation information in the editor Inheritance Object DocumentationObject Namespace : i5.Toolkit.Core.SceneDocumentation Assembly : cs.temp.dll.dll Syntax public class DocumentationObject : MonoBehaviour Fields description A description of the documented highlight Declaration public string description Field Value Type Description String title The title of the documentation Declaration public string title Field Value Type Description String type The type of documentation (e.g. information, todo mark or bug mark) Based on this, the icon is changed Declaration public DocumentationType type Field Value Type Description DocumentationType url A url to further documentation on the matter Declaration public string url Field Value Type Description String"
  },
  "api/i5.Toolkit.Core.SceneDocumentation.DocumentationType.html": {
    "href": "api/i5.Toolkit.Core.SceneDocumentation.DocumentationType.html",
    "title": "Enum DocumentationType | i5 Toolkit Documentation",
    "keywords": "Enum DocumentationType The different types of Documentation which are available Namespace : i5.Toolkit.Core.SceneDocumentation Assembly : cs.temp.dll.dll Syntax public enum DocumentationType Fields Name Description BUG INFO NO_ICON TODO"
  },
  "api/i5.Toolkit.Core.SceneDocumentation.html": {
    "href": "api/i5.Toolkit.Core.SceneDocumentation.html",
    "title": "Namespace i5.Toolkit.Core.SceneDocumentation | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.SceneDocumentation Classes DocumentationObject A special component which provides documentation information in the editor Enums DocumentationType The different types of Documentation which are available"
  },
  "api/i5.Toolkit.Core.ServiceCore.AsyncThreadedWorkerService-1.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.AsyncThreadedWorkerService-1.html",
    "title": "Class AsyncThreadedWorkerService<OperationType> | i5 Toolkit Documentation",
    "keywords": "Class AsyncThreadedWorkerService<OperationType> Threaded worker service which can perform operations asynchronously on other threads Inheritance Object AsyncThreadedWorkerService<OperationType> Implements IUpdateableService IService Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public class AsyncThreadedWorkerService<OperationType> : IUpdateableService, IService where OperationType : IOperation Type Parameters Name Description OperationType The type of operation that should be performed Properties Enabled If set to true, the update routine will run every frame Declaration public bool Enabled { get; set; } Property Value Type Description Boolean Methods AddOperation(OperationType) Adds an operation to the queue of operations to execute on a separate thread Declaration public void AddOperation(OperationType operation) Parameters Type Name Description OperationType operation The operation which should be executed AsyncOperation(OperationType) Declaration protected virtual void AsyncOperation(OperationType operation) Parameters Type Name Description OperationType operation Cleanup() Called by the ServiceManager to clean the service up when it is removed Declaration public void Cleanup() Initialize(IServiceManager) Called by the ServiceManager to initialize the service Declaration public void Initialize(IServiceManager owner) Parameters Type Name Description IServiceManager owner Update() Called by the ServiceManager every frame If there is an operation waiting to be executed, it will be started If there are finished operations available, their callback method is called Declaration public void Update() Implements IUpdateableService IService"
  },
  "api/i5.Toolkit.Core.ServiceCore.BaseServiceBootstrapper.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.BaseServiceBootstrapper.html",
    "title": "Class BaseServiceBootstrapper | i5 Toolkit Documentation",
    "keywords": "Class BaseServiceBootstrapper A bootstrapper base class which handles the service initialization Inheritance Object BaseServiceBootstrapper Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public abstract class BaseServiceBootstrapper : MonoBehaviour Methods OnDestroy() Declaration protected virtual void OnDestroy() RegisterServices() Declaration protected abstract void RegisterServices() Start() Declaration protected virtual void Start() UnRegisterServices() Declaration protected abstract void UnRegisterServices()"
  },
  "api/i5.Toolkit.Core.ServiceCore.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.html",
    "title": "Namespace i5.Toolkit.Core.ServiceCore | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.ServiceCore Classes AsyncThreadedWorkerService<OperationType> Threaded worker service which can perform operations asynchronously on other threads BaseServiceBootstrapper A bootstrapper base class which handles the service initialization Operation<ResultType> The operation to execute ServiceManager Manager which administers registered services These services need to implement the IService interface and do not need to inherit from MonoBehaviour ServiceManagerRunner The runner which provides MonoBehaviour events to an IRunnerReceiver Interfaces IOperation Contract which defines the interface of an operation IRunnerReceiver Contract which defines which methods a MonoBehaviour runner can access This can be used to provide MonoBehaviour events to non-MonoBehaviours IService Contract which defines the capabilities of a service IServiceManager Contract which defines how to interact with service manager implementations IUpdateableService A service which can execute code every frame Enums OperationStatus The possible states of an operation"
  },
  "api/i5.Toolkit.Core.ServiceCore.IOperation.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.IOperation.html",
    "title": "Interface IOperation | i5 Toolkit Documentation",
    "keywords": "Interface IOperation Contract which defines the interface of an operation Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public interface IOperation Methods ReturnCallback() Declaration void ReturnCallback()"
  },
  "api/i5.Toolkit.Core.ServiceCore.IRunnerReceiver.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.IRunnerReceiver.html",
    "title": "Interface IRunnerReceiver | i5 Toolkit Documentation",
    "keywords": "Interface IRunnerReceiver Contract which defines which methods a MonoBehaviour runner can access This can be used to provide MonoBehaviour events to non-MonoBehaviours Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public interface IRunnerReceiver Methods OnRunnerDestroyed() Called to inform the receiver that the runner object is destroyed Declaration void OnRunnerDestroyed() Update() Called every frame by the runner Declaration void Update()"
  },
  "api/i5.Toolkit.Core.ServiceCore.IService.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.IService.html",
    "title": "Interface IService | i5 Toolkit Documentation",
    "keywords": "Interface IService Contract which defines the capabilities of a service Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public interface IService Methods Cleanup() Cleans up the service when it is unregistered at the service manager Declaration void Cleanup() Initialize(IServiceManager) Initializes the service Declaration void Initialize(IServiceManager owner) Parameters Type Name Description IServiceManager owner The IServiceManager which owns this service"
  },
  "api/i5.Toolkit.Core.ServiceCore.IServiceManager.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.IServiceManager.html",
    "title": "Interface IServiceManager | i5 Toolkit Documentation",
    "keywords": "Interface IServiceManager Contract which defines how to interact with service manager implementations Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public interface IServiceManager Properties Runner The runner object which provides MonoBehaviour events to the service manager This can also be used by services to access MonoBehaviour functionality, e.g. for running co-routines Declaration ServiceManagerRunner Runner { get; } Property Value Type Description ServiceManagerRunner Methods InstGetService<T>() Retrieves the reference to a registered service of the given type Declaration T InstGetService<T>() where T : IService Returns Type Description T Returns the reference to the service Type Parameters Name Description T The type of service InstRegisterService<T>(T) Registers a new service Declaration void InstRegisterService<T>(T service) where T : IService Parameters Type Name Description T service The service to register Type Parameters Name Description T The type of service InstRemoveService<T>() Removes a service from the service manager Declaration void InstRemoveService<T>() where T : IService Type Parameters Name Description T The type of service InstServiceExists<T>() Checks if a service of the given type has been registered at the service manager Declaration bool InstServiceExists<T>() where T : IService Returns Type Description Boolean Returns true if a service with the given type exists at the service manager Type Parameters Name Description T The type of the service"
  },
  "api/i5.Toolkit.Core.ServiceCore.IUpdateableService.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.IUpdateableService.html",
    "title": "Interface IUpdateableService | i5 Toolkit Documentation",
    "keywords": "Interface IUpdateableService A service which can execute code every frame Inherited Members IService.Initialize(IServiceManager) IService.Cleanup() Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public interface IUpdateableService : IService Properties Enabled If set to true, the update function is executed every frame; otherwise the service is disabled Declaration bool Enabled { get; set; } Property Value Type Description Boolean Methods Update() Called by the service manager and executed every frame Declaration void Update()"
  },
  "api/i5.Toolkit.Core.ServiceCore.Operation-1.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.Operation-1.html",
    "title": "Class Operation<ResultType> | i5 Toolkit Documentation",
    "keywords": "Class Operation<ResultType> The operation to execute Inheritance Object Operation<ResultType> Implements IOperation Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public class Operation<ResultType> : IOperation Type Parameters Name Description ResultType The type of the operation's return value Constructors Operation(Action<Operation<ResultType>>) Creates a new operation instance with the given callback method Declaration public Operation(Action<Operation<ResultType>> callback) Parameters Type Name Description Action < Operation <ResultType>> callback The callback method which is invoked once the operation has finished Fields callback The callback method which is invoked once the operation has finished The call will provide the result Declaration public Action<Operation<ResultType>> callback Field Value Type Description Action < Operation <ResultType>> result The result of the operation once it is finished Declaration public ResultType result Field Value Type Description ResultType status The status of the operation Declaration public OperationStatus status Field Value Type Description OperationStatus Methods ReturnCallback() Invokes the callback method Declaration public void ReturnCallback() Implements IOperation"
  },
  "api/i5.Toolkit.Core.ServiceCore.OperationStatus.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.OperationStatus.html",
    "title": "Enum OperationStatus | i5 Toolkit Documentation",
    "keywords": "Enum OperationStatus The possible states of an operation Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public enum OperationStatus Fields Name Description ERROR SUCCESS WORKING"
  },
  "api/i5.Toolkit.Core.ServiceCore.ServiceManager.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.ServiceManager.html",
    "title": "Class ServiceManager | i5 Toolkit Documentation",
    "keywords": "Class ServiceManager Manager which administers registered services These services need to implement the IService interface and do not need to inherit from MonoBehaviour Inheritance Object ServiceManager Implements IServiceManager IRunnerReceiver Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public class ServiceManager : IServiceManager, IRunnerReceiver Constructors ServiceManager() Creates a new instance of a ServiceManager Declaration public ServiceManager() Properties Instance The instance of the service manager Declaration public static ServiceManager Instance { get; } Property Value Type Description ServiceManager Runner The runner in the scene This runner object provides MonoBehaviour events to the service manager It can be accessed by servies to run MonoBehaviour functionality, e.g. co-routines Declaration public ServiceManagerRunner Runner { get; } Property Value Type Description ServiceManagerRunner Methods GetService<T>() Gets the service instance with the given type Declaration public static T GetService<T>() where T : IService Returns Type Description T Returns the registered service instance Type Parameters Name Description T The type of service InstGetService<T>() Gets the service instance with the given type that is registered at this instance Declaration public T InstGetService<T>() where T : IService Returns Type Description T Returns the registered service instance Type Parameters Name Description T The type of service InstRegisterService<T>(T) Instance method for registering a new service Declaration public void InstRegisterService<T>(T service) where T : IService Parameters Type Name Description T service The service instance which should be registered Type Parameters Name Description T The type of service InstRemoveService<T>() Removes a service with the given type from this ServiceManager instance Declaration public void InstRemoveService<T>() where T : IService Type Parameters Name Description T The type of service InstServiceExists<T>() Checks if a service with the given type exists at this instance Declaration public bool InstServiceExists<T>() where T : IService Returns Type Description Boolean Returns true if a service of the given type was registered at this instance Type Parameters Name Description T The type of service OnRunnerDestroyed() Called if the runner object is destroyed Makes sure that the runner persists if it was destroyed by some other script Declaration public void OnRunnerDestroyed() RegisterService<T>(T) Registers a new service at the service manager Declaration public static void RegisterService<T>(T service) where T : IService Parameters Type Name Description T service The service instance which should be registered at the ServiceManager Type Parameters Name Description T The type of service RemoveService<T>() Removes a service with the given type from the ServiceManager Declaration public static void RemoveService<T>() where T : IService Type Parameters Name Description T The type of service ServiceExists<T>() Checks if a service with the given type exists at the ServiceManager Declaration public static bool ServiceExists<T>() where T : IService Returns Type Description Boolean Returns true if a service of the given type was registered Type Parameters Name Description T The type of service Update() Called by the update runner Updates the updateable services Declaration public void Update() Implements IServiceManager IRunnerReceiver"
  },
  "api/i5.Toolkit.Core.ServiceCore.ServiceManagerRunner.html": {
    "href": "api/i5.Toolkit.Core.ServiceCore.ServiceManagerRunner.html",
    "title": "Class ServiceManagerRunner | i5 Toolkit Documentation",
    "keywords": "Class ServiceManagerRunner The runner which provides MonoBehaviour events to an IRunnerReceiver Inheritance Object ServiceManagerRunner Namespace : i5.Toolkit.Core.ServiceCore Assembly : cs.temp.dll.dll Syntax public class ServiceManagerRunner : MonoBehaviour Methods Initialize(IRunnerReceiver) Initializes the runner by assigning the runner receiver Declaration public void Initialize(IRunnerReceiver runnerReceiver) Parameters Type Name Description IRunnerReceiver runnerReceiver The runner receiver that should receive the MonoBehaviour events"
  },
  "api/i5.Toolkit.Core.Spawners.Demo.html": {
    "href": "api/i5.Toolkit.Core.Spawners.Demo.html",
    "title": "Namespace i5.Toolkit.Core.Spawners.Demo | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Spawners.Demo Classes SpawnerDemo"
  },
  "api/i5.Toolkit.Core.Spawners.Demo.SpawnerDemo.html": {
    "href": "api/i5.Toolkit.Core.Spawners.Demo.SpawnerDemo.html",
    "title": "Class SpawnerDemo | i5 Toolkit Documentation",
    "keywords": "Class SpawnerDemo Inheritance Object SpawnerDemo Namespace : i5.Toolkit.Core.Spawners.Demo Assembly : cs.temp.dll.dll Syntax public class SpawnerDemo : MonoBehaviour Fields spawner Declaration public Spawner spawner Field Value Type Description Spawner"
  },
  "api/i5.Toolkit.Core.Spawners.html": {
    "href": "api/i5.Toolkit.Core.Spawners.html",
    "title": "Namespace i5.Toolkit.Core.Spawners | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Spawners Classes Spawner Spawner which can instantiate one prefab object in the scene"
  },
  "api/i5.Toolkit.Core.Spawners.Spawner.html": {
    "href": "api/i5.Toolkit.Core.Spawners.Spawner.html",
    "title": "Class Spawner | i5 Toolkit Documentation",
    "keywords": "Class Spawner Spawner which can instantiate one prefab object in the scene Inheritance Object Spawner Namespace : i5.Toolkit.Core.Spawners Assembly : cs.temp.dll.dll Syntax public class Spawner : MonoBehaviour Fields destroyWithSpawner Declaration protected bool destroyWithSpawner Field Value Type Description Boolean maxNumberOfInstances Declaration protected int maxNumberOfInstances Field Value Type Description Int32 overwriteExistingInstances Declaration protected bool overwriteExistingInstances Field Value Type Description Boolean prefab Declaration protected GameObject prefab Field Value Type Description GameObject spawnedInstanceQueue Declaration protected Queue<GameObject> spawnedInstanceQueue Field Value Type Description Queue < GameObject > spawnOnAwake Declaration protected bool spawnOnAwake Field Value Type Description Boolean Properties DestroyWithSpawner If true, the spawned instance will be destroyed if the spawner is destroyed Declaration public bool DestroyWithSpawner { get; set; } Property Value Type Description Boolean MostRecentlySpawnedObject Returns the most recently spawned object Declaration public GameObject MostRecentlySpawnedObject { get; } Property Value Type Description GameObject OverwriteExistingInstances If true, multiple calls of Spawn() will destroy existing instances in the scene Otherwise Spawn() will only work if no instance exists in the scene Declaration public bool OverwriteExistingInstances { get; set; } Property Value Type Description Boolean SpawnedInstances The instance which was created by this spawner Declaration public GameObject[] SpawnedInstances { get; } Property Value Type Description GameObject [] Methods Awake() Initiates a spawn if spawnOnAwake is true Declaration protected virtual void Awake() OnDestroy() Called if the spawner is destroyed. If destroyWithSpawner was checked, the spawned instance will also be destroyed Declaration protected virtual void OnDestroy() Setup(GameObject) This method can be overwritten to setup the spawned instance immediately after it has been created Declaration protected virtual void Setup(GameObject instance) Parameters Type Name Description GameObject instance Spawn() Spawns the object instance Note that the spawn may fail, e.g. if the instance already existed and may not be overwritten Declaration public bool Spawn() Returns Type Description Boolean True if the spawn process was successful"
  },
  "api/i5.Toolkit.Core.TestHelpers.AsyncTest.html": {
    "href": "api/i5.Toolkit.Core.TestHelpers.AsyncTest.html",
    "title": "Class AsyncTest | i5 Toolkit Documentation",
    "keywords": "Class AsyncTest Utilities for asynchronous tests Inheritance Object AsyncTest Namespace : i5.Toolkit.Core.TestHelpers Assembly : cs.temp.dll.dll Syntax public static class AsyncTest Methods WaitForTask(Task) Waits for the given task to complete Use this instead of await in Unit tests. Unity's NUnit version cannot handle Task methods to yield on await Hence, the asynchronous tests must be marked as UnityTests. Awaitable calls are replaced with an assignment to a Task object Declaration public static IEnumerator WaitForTask(Task task) Parameters Type Name Description Task task The task object to await Returns Type Description IEnumerator"
  },
  "api/i5.Toolkit.Core.TestHelpers.html": {
    "href": "api/i5.Toolkit.Core.TestHelpers.html",
    "title": "Namespace i5.Toolkit.Core.TestHelpers | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.TestHelpers Classes AsyncTest Utilities for asynchronous tests InvalidPlatformException PlayModeTestUtilities"
  },
  "api/i5.Toolkit.Core.TestHelpers.InvalidPlatformException.html": {
    "href": "api/i5.Toolkit.Core.TestHelpers.InvalidPlatformException.html",
    "title": "Class InvalidPlatformException | i5 Toolkit Documentation",
    "keywords": "Class InvalidPlatformException Inheritance Object InvalidPlatformException Namespace : i5.Toolkit.Core.TestHelpers Assembly : cs.temp.dll.dll Syntax public class InvalidPlatformException : Exception Constructors InvalidPlatformException() Declaration public InvalidPlatformException() InvalidPlatformException(String) Declaration public InvalidPlatformException(string message) Parameters Type Name Description String message InvalidPlatformException(String, Exception) Declaration public InvalidPlatformException(string message, Exception inner) Parameters Type Name Description String message Exception inner"
  },
  "api/i5.Toolkit.Core.TestHelpers.PlayModeTestUtilities.html": {
    "href": "api/i5.Toolkit.Core.TestHelpers.PlayModeTestUtilities.html",
    "title": "Class PlayModeTestUtilities | i5 Toolkit Documentation",
    "keywords": "Class PlayModeTestUtilities Inheritance Object PlayModeTestUtilities Namespace : i5.Toolkit.Core.TestHelpers Assembly : cs.temp.dll.dll Syntax public static class PlayModeTestUtilities Methods LoadEmptyTestScene() Declaration public static void LoadEmptyTestScene() UnloadTestScene() Declaration public static void UnloadTestScene()"
  },
  "api/i5.Toolkit.Core.Tests.AppConsole.ActivationVisibilityManagerTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.AppConsole.ActivationVisibilityManagerTests.html",
    "title": "Class ActivationVisibilityManagerTests | i5 Toolkit Documentation",
    "keywords": "Class ActivationVisibilityManagerTests Tests for the ActivationVisibilityManager Inheritance Object ActivationVisibilityManagerTests Namespace : i5.Toolkit.Core.Tests.AppConsole Assembly : cs.temp.dll.dll Syntax public class ActivationVisibilityManagerTests Methods IsVisible_Get_ReturnsActiveSelf() Checks that IsVisible returns the active self state of the GameObject Declaration public void IsVisible_Get_ReturnsActiveSelf() IsVisible_GetParentDeactivated_ReturnsActiveSelf() Checks that IsVisible returns the active self state of the GameObject, even if the parent GameObject is deactivated Declaration public void IsVisible_GetParentDeactivated_ReturnsActiveSelf() IsVisible_SetFalse_DeactivatesGameObject() Checks that setting the visibility to false deactivates the GameObject Declaration public void IsVisible_SetFalse_DeactivatesGameObject() IsVisible_SetTrue_ActivatesGameObject() Checks that setting the visibility to true activates the GameObject Declaration public void IsVisible_SetTrue_ActivatesGameObject() SetUp() Resets the scene for each test Declaration public void SetUp()"
  },
  "api/i5.Toolkit.Core.Tests.AppConsole.AutoScrollerTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.AppConsole.AutoScrollerTests.html",
    "title": "Class AutoScrollerTests | i5 Toolkit Documentation",
    "keywords": "Class AutoScrollerTests Tests for the AutoScroller component Inheritance Object AutoScrollerTests Namespace : i5.Toolkit.Core.Tests.AppConsole Assembly : cs.temp.dll.dll Syntax public class AutoScrollerTests Methods NotifyScrollValueChanged_ContentSizeChanged_KeepsScrollerActive() Checks that the scroller stays active if the scroll value changes because of a content update Declaration public void NotifyScrollValueChanged_ContentSizeChanged_KeepsScrollerActive() NotifyScrollValueChanged_ContentSizeChanged_ScrollToBottom() Checks that the scroller scrolls to the bottom if the content size was changed and the scroller is active Declaration public void NotifyScrollValueChanged_ContentSizeChanged_ScrollToBottom() NotifyScrollValueChanged_ScrollerInactive_StaysDeactivated() Checks that the scroller stays deactivated if the scroll value changes and the scroller is inactive Declaration public void NotifyScrollValueChanged_ScrollerInactive_StaysDeactivated() NotifyScrollValueChanged_ScrollerInactiveContentSizeChanged_NoScrollToBottom() Checks that the scroller does not scroll to bottom if it is deactivated and scroll value changes because of an content size change Declaration public void NotifyScrollValueChanged_ScrollerInactiveContentSizeChanged_NoScrollToBottom() NotifyScrollValueChanged_UserScrolled_DeactivatesScroller() Checks that the scroller is deactivated if the user scrolls the scrollview Declaration public void NotifyScrollValueChanged_UserScrolled_DeactivatesScroller() OnEnable_ScrollerActive_ScrollsToBottom() Checks if the scroller scrolls to the bottom when OnEnable is called Declaration public void OnEnable_ScrollerActive_ScrollsToBottom() ScrollerActive_SetFalse_ActivatesElementToStartScroller() Checks if the interaction element which starts the scroller is activated if the scroller is not active Declaration public void ScrollerActive_SetFalse_ActivatesElementToStartScroller() ScrollerActive_SetTrue_DeactivatesElementToStartScroller() Checks if the interaction element which starts the scroller is deactiaved if the scroller if active Declaration public void ScrollerActive_SetTrue_DeactivatesElementToStartScroller() ScrollerActive_SetTrue_ScrollsToBottom() Checks if the scroller scrolls to be bottom if it is activated Declaration public void ScrollerActive_SetTrue_ScrollsToBottom() SetUp() Resets the scene Declaration public void SetUp()"
  },
  "api/i5.Toolkit.Core.Tests.AppConsole.ConsoleTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.AppConsole.ConsoleTests.html",
    "title": "Class ConsoleTests | i5 Toolkit Documentation",
    "keywords": "Class ConsoleTests Tests for the console logic Inheritance Object ConsoleTests Namespace : i5.Toolkit.Core.Tests.AppConsole Assembly : cs.temp.dll.dll Syntax public class ConsoleTests Methods IsCapturing_False_NoLogsCaptured() Checks that no logs are captured if IsCapturing is set to false Declaration public void IsCapturing_False_NoLogsCaptured() IsCapturing_True_LogsCaptured() Checks that the console captures logs when IsCapturing is true Declaration public void IsCapturing_True_LogsCaptured() MessageReceived_Error_CorrectTypeCaptured() Checks that the correct log type is captured if an error message is received Declaration public void MessageReceived_Error_CorrectTypeCaptured() MessageReceived_Log_CorrectTypeCaptured() Checks that the correct log type is captured if a log message is received Declaration public void MessageReceived_Log_CorrectTypeCaptured() MessageReceived_Log_TextCaptured() Checks that the text content is captured if a log message is received Declaration public void MessageReceived_Log_TextCaptured() MessageReceived_LogError_TextCaptured() Checks that the text content is captured if an error message is received Declaration public void MessageReceived_LogError_TextCaptured() MessageReceived_LogWarning_TextCaptured() Checks that the text content is captured if a warning message is received Declaration public void MessageReceived_LogWarning_TextCaptured() MessageReceived_Warning_CorrectTypeCaptured() Checks that the correct log type is captured if a warning message is received Declaration public void MessageReceived_Warning_CorrectTypeCaptured() OnMessageAdded_IsCapturing_EventInvoked() Checks that new messages invoke the OnMessageAdded event Declaration public void OnMessageAdded_IsCapturing_EventInvoked() OnMessageAdded_IsNotCapturing_EventNotInvoked() Checks that no event is invoked if the console is not capturing Declaration public void OnMessageAdded_IsNotCapturing_EventNotInvoked() SetUp() Resets the scene for each test Declaration public void SetUp()"
  },
  "api/i5.Toolkit.Core.Tests.AppConsole.DefaultLogFormatterTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.AppConsole.DefaultLogFormatterTests.html",
    "title": "Class DefaultLogFormatterTests | i5 Toolkit Documentation",
    "keywords": "Class DefaultLogFormatterTests Tests for the default log formatter Inheritance Object DefaultLogFormatterTests Namespace : i5.Toolkit.Core.Tests.AppConsole Assembly : cs.temp.dll.dll Syntax public class DefaultLogFormatterTests Methods Format_OutputIsLogContent() Checks that the log message's content is output as text Declaration public void Format_OutputIsLogContent() SetUp() Resets the test scene Declaration public void SetUp()"
  },
  "api/i5.Toolkit.Core.Tests.AppConsole.html": {
    "href": "api/i5.Toolkit.Core.Tests.AppConsole.html",
    "title": "Namespace i5.Toolkit.Core.Tests.AppConsole | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Tests.AppConsole Classes ActivationVisibilityManagerTests Tests for the ActivationVisibilityManager AutoScrollerTests Tests for the AutoScroller component ConsoleTests Tests for the console logic DefaultLogFormatterTests Tests for the default log formatter TextConsoleUITests Tests for the text console UI TMPLogColorFormatterTests Tests for the TextMeshPro color formatter"
  },
  "api/i5.Toolkit.Core.Tests.AppConsole.TextConsoleUITests.html": {
    "href": "api/i5.Toolkit.Core.Tests.AppConsole.TextConsoleUITests.html",
    "title": "Class TextConsoleUITests | i5 Toolkit Documentation",
    "keywords": "Class TextConsoleUITests Tests for the text console UI Inheritance Object TextConsoleUITests Namespace : i5.Toolkit.Core.Tests.AppConsole Assembly : cs.temp.dll.dll Syntax public class TextConsoleUITests Methods OnDisable_CaptureInBackground_ConsoleCaptureTrue() Checks that the console keeps capturing in background if the console is configured for background capture and the object is deactivated Declaration public void OnDisable_CaptureInBackground_ConsoleCaptureTrue() OnDisable_NoCaptureInBackground_ConsoleCaptureFalse() Checks that the console stops capturing if the console should not capture in background and is deactivated Declaration public void OnDisable_NoCaptureInBackground_ConsoleCaptureFalse() OnEnable_ConsoleCaptureTrue() Checks that the console starts capturing when the object is enabled Declaration public void OnEnable_ConsoleCaptureTrue() SetUp() Resets the scene Declaration public void SetUp() UpdateUI_MessageGiven_WritesMessage() Checks that a captured log message is written to the text display Declaration public void UpdateUI_MessageGiven_WritesMessage() UpdateUI_NoMessages_WritesEmptyString() Checks that the console writes an empty text if no messages have been captured yet Declaration public void UpdateUI_NoMessages_WritesEmptyString()"
  },
  "api/i5.Toolkit.Core.Tests.AppConsole.TMPLogColorFormatterTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.AppConsole.TMPLogColorFormatterTests.html",
    "title": "Class TMPLogColorFormatterTests | i5 Toolkit Documentation",
    "keywords": "Class TMPLogColorFormatterTests Tests for the TextMeshPro color formatter Inheritance Object TMPLogColorFormatterTests Namespace : i5.Toolkit.Core.Tests.AppConsole Assembly : cs.temp.dll.dll Syntax public class TMPLogColorFormatterTests Methods Format_AssertLog_OutputUsesAssertColor() Checks that assert messages are formatted using the assert color Declaration public void Format_AssertLog_OutputUsesAssertColor() Format_ErrorLog_OutputUsesErrorColor() Checks that error messages are formatted using the error color Declaration public void Format_ErrorLog_OutputUsesErrorColor() Format_ExceptionLog_OutputUsesExceptionColor() Checks that exception messages are formatted using the exception color Declaration public void Format_ExceptionLog_OutputUsesExceptionColor() Format_Log_OutputUsesLogColor() Checks that log messages are formatted using the log color Declaration public void Format_Log_OutputUsesLogColor() Format_OutputContainsContent() Checks that the formatted output containts the message's output Declaration public void Format_OutputContainsContent() Format_OutputContainsStackTrace() Checks that the formatted output contains the stack trace Declaration public void Format_OutputContainsStackTrace() Format_WarningLog_OutputUsesWarningColor() Checks that warning messages are formatted using the warning color Declaration public void Format_WarningLog_OutputUsesWarningColor() SetUp() Resets the scene Declaration public void SetUp()"
  },
  "api/i5.Toolkit.Core.Tests.ModelImporters.html": {
    "href": "api/i5.Toolkit.Core.Tests.ModelImporters.html",
    "title": "Namespace i5.Toolkit.Core.Tests.ModelImporters | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Tests.ModelImporters Classes MtlLibraryTests Tests for the MtlLibraryService class ObjImporterTests Tests for the ObjImporter class"
  },
  "api/i5.Toolkit.Core.Tests.ModelImporters.MtlLibraryTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.ModelImporters.MtlLibraryTests.html",
    "title": "Class MtlLibraryTests | i5 Toolkit Documentation",
    "keywords": "Class MtlLibraryTests Tests for the MtlLibraryService class Inheritance Object MtlLibraryTests Namespace : i5.Toolkit.Core.Tests.ModelImporters Assembly : cs.temp.dll.dll Syntax public class MtlLibraryTests Methods ExtendedLogging_Disabled_CommentsNotLogged() Checks that comments in the mtl fiel are not logged if ExtendedLogging is set to false Declaration public IEnumerator ExtendedLogging_Disabled_CommentsNotLogged() Returns Type Description IEnumerator ExtendedLogging_Enabled_CommentsLogged() Checks that comments in the mtl file are logged if ExtendedLogging is set to true Declaration public IEnumerator ExtendedLogging_Enabled_CommentsLogged() Returns Type Description IEnumerator GetMaterialConstructor_ExistentMatLibExistentMat_MatConstrColorSet() Checks that GetMaterialConstructor of an existing material returns a MaterialConstructor with the correct color The color is specified in the .mat file in the Data folder Declaration public IEnumerator GetMaterialConstructor_ExistentMatLibExistentMat_MatConstrColorSet() Returns Type Description IEnumerator GetMaterialConstructor_ExistentMatLibExistentMat_MatConstrNameSet() Checks that GetMaterialConstructor of an existing material returns a MaterialConstructor with the correct name Declaration public IEnumerator GetMaterialConstructor_ExistentMatLibExistentMat_MatConstrNameSet() Returns Type Description IEnumerator GetMaterialConstructor_ExistentMatLibExistentMat_ReturnsNotNull() Checks that GetMaterialConstructor with an existing material in a loaded library does not return null Declaration public IEnumerator GetMaterialConstructor_ExistentMatLibExistentMat_ReturnsNotNull() Returns Type Description IEnumerator GetMaterialConstructor_ExistentMatLibNonExistentMat_ReturnsNull() Checks that GetMaterialConstructor returns null if the material does not exist in the specified library Declaration public IEnumerator GetMaterialConstructor_ExistentMatLibNonExistentMat_ReturnsNull() Returns Type Description IEnumerator GetMaterialConstructor_NonExistentMatLib_ReturnsNull() Checks that GetMaterialConstructor returns null if the specified material library was not loaded Declaration public void GetMaterialConstructor_NonExistentMatLib_ReturnsNull() Initialize() One-time initialization that loads a material library and sets up the fake content loader Declaration public void Initialize() LoadLibraryAsync_LoadFailed_LibraryLoadedReturnsFalse() Checks that LoadLibraryAsync() returns false if the library could not be loaded Declaration public IEnumerator LoadLibraryAsync_LoadFailed_LibraryLoadedReturnsFalse() Returns Type Description IEnumerator LoadLibraryAsync_LoadLibraryMultipleTimes_NoErrorsAndLibraryLoadedTrue() Checks that LoadLibraryAsync() does not break if the same library is loaded multiple times Declaration public IEnumerator LoadLibraryAsync_LoadLibraryMultipleTimes_NoErrorsAndLibraryLoadedTrue() Returns Type Description IEnumerator LoadLibraryAsync_NewLibrary_LibraryLoadedReturnsTrue() CHecks that LoadLibraryAsync() returns true if the library could be loaded Declaration public IEnumerator LoadLibraryAsync_NewLibrary_LibraryLoadedReturnsTrue() Returns Type Description IEnumerator ResetScene() Called before every test; resets the scene and registers the service Declaration public void ResetScene()"
  },
  "api/i5.Toolkit.Core.Tests.ModelImporters.ObjImporterTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.ModelImporters.ObjImporterTests.html",
    "title": "Class ObjImporterTests | i5 Toolkit Documentation",
    "keywords": "Class ObjImporterTests Tests for the ObjImporter class Inheritance Object ObjImporterTests Namespace : i5.Toolkit.Core.Tests.ModelImporters Assembly : cs.temp.dll.dll Syntax public class ObjImporterTests Methods ContentLoader_Initialized_InitWithUnityWebRequestLoader() Checks that the ContentLoader is initialized with the UnityWebRequestLoader by default Declaration public void ContentLoader_Initialized_InitWithUnityWebRequestLoader() ImportAsync_CubeObj_ChildHasComponents() Checks that ImportAsync generates a child object with MeshFilter and MeshRenderer components when importing the cube .obj file Declaration public IEnumerator ImportAsync_CubeObj_ChildHasComponents() Returns Type Description IEnumerator ImportAsync_CubeObj_ChildHasCorrectMaterial() Checks that ImportAsync assigns the correct material to the generated child GameObject Declaration public IEnumerator ImportAsync_CubeObj_ChildHasCorrectMaterial() Returns Type Description IEnumerator ImportAsync_CubeObj_ChildHasCorrectMesh() Checks that ImportAsync assigns the correct mesh to the created child GameObject Declaration public IEnumerator ImportAsync_CubeObj_ChildHasCorrectMesh() Returns Type Description IEnumerator ImportAsync_CubeObj_HasChild() Checks that a child object was created if the cube .obj file is imported Declaration public IEnumerator ImportAsync_CubeObj_HasChild() Returns Type Description IEnumerator ImportAsync_EmptyObj_ReturnGameObject() Checks that a GameObject is returned if an empty .obj is loaded and that the corresponding warnings and errors are given Declaration public IEnumerator ImportAsync_EmptyObj_ReturnGameObject() Returns Type Description IEnumerator ImportAsync_ObjFetchSuccessMtlFetchFail_CreateObjectWithDefaultMat() Checks that ImportAsync creates an object wtih a default material if the .obj file could be loaded but the .mtl file could not be loaded Declaration public IEnumerator ImportAsync_ObjFetchSuccessMtlFetchFail_CreateObjectWithDefaultMat() Returns Type Description IEnumerator ImportAsync_ThreeObj_HasThreeChildren() Checks that ImportAsync creates three child objects for the three objects in ThreeObj.obj Declaration public IEnumerator ImportAsync_ThreeObj_HasThreeChildren() Returns Type Description IEnumerator ImportAsync_WebRequestFailed_ReturnNull() Checks that ImportAsync returns null if the web request failed Declaration public IEnumerator ImportAsync_WebRequestFailed_ReturnNull() Returns Type Description IEnumerator ImportAsync_WebRequestSuccess_SetName() Checks that ImportAsync sets the name of the GameObject correctly based on the name of the .obj file Declaration public IEnumerator ImportAsync_WebRequestSuccess_SetName() Returns Type Description IEnumerator Initialize_Initialized_MtlLibrarySetUp() Checks that the service initialization automatically initializes the MtlLibrary Declaration public void Initialize_Initialized_MtlLibrarySetUp() LoadData() Called one time to load the contents of the .obj and .mtl files Declaration public void LoadData() ResetScene() Resets the scene to the standard test scene before executed each test Declaration public void ResetScene()"
  },
  "api/i5.Toolkit.Core.Tests.OpenIDConnectClient.html": {
    "href": "api/i5.Toolkit.Core.Tests.OpenIDConnectClient.html",
    "title": "Namespace i5.Toolkit.Core.Tests.OpenIDConnectClient | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Tests.OpenIDConnectClient Classes LearningLayersOIDCProviderTests OpenIDConnectServiceTests RedirectServerListenerTests"
  },
  "api/i5.Toolkit.Core.Tests.OpenIDConnectClient.LearningLayersOIDCProviderTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.OpenIDConnectClient.LearningLayersOIDCProviderTests.html",
    "title": "Class LearningLayersOIDCProviderTests | i5 Toolkit Documentation",
    "keywords": "Class LearningLayersOIDCProviderTests Inheritance Object LearningLayersOIDCProviderTests Namespace : i5.Toolkit.Core.Tests.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class LearningLayersOIDCProviderTests Methods CheckAccessTokenAsync_WebResponseFailed_ReturnsFalse() Declaration public IEnumerator CheckAccessTokenAsync_WebResponseFailed_ReturnsFalse() Returns Type Description IEnumerator CheckAccessTokenAsync_WebResponseSuccessful_ReturnsTrue() Declaration public IEnumerator CheckAccessTokenAsync_WebResponseSuccessful_ReturnsTrue() Returns Type Description IEnumerator Constructor_Initialized_ContentLoaderNotNull() Declaration public void Constructor_Initialized_ContentLoaderNotNull() Constructor_Initialized_JsonWrapperNotNull() Declaration public void Constructor_Initialized_JsonWrapperNotNull() GetAccessCodeFromTokenAsync_NoClientData_ReturnsEmptyString() Declaration public IEnumerator GetAccessCodeFromTokenAsync_NoClientData_ReturnsEmptyString() Returns Type Description IEnumerator GetAccessCodeFromTokenAsync_WebResponseFailed_ReturnsEmptyToken() Declaration public IEnumerator GetAccessCodeFromTokenAsync_WebResponseFailed_ReturnsEmptyToken() Returns Type Description IEnumerator GetAccessCodeFromTokenAsync_WebResponseSuccess_ReturnsToken() Declaration public IEnumerator GetAccessCodeFromTokenAsync_WebResponseSuccess_ReturnsToken() Returns Type Description IEnumerator GetAccessToken_TokenNotProvided_ReturnsEmptyToken() Declaration public void GetAccessToken_TokenNotProvided_ReturnsEmptyToken() GetAccessToken_TokenProvided_ExtractsToken() Declaration public void GetAccessToken_TokenProvided_ExtractsToken() GetAuthorizationCode_CodeNotProvided_ReturnsEmptyString() Declaration public void GetAuthorizationCode_CodeNotProvided_ReturnsEmptyString() GetAuthorizationCode_CodeProvided_ExtractsCode() Declaration public void GetAuthorizationCode_CodeProvided_ExtractsCode() GetUserInfoAsync_JsonParseFailed_ReturnsNull() Declaration public IEnumerator GetUserInfoAsync_JsonParseFailed_ReturnsNull() Returns Type Description IEnumerator GetUserInfoAsync_WebResponseFailed_ReturnsNull() Declaration public IEnumerator GetUserInfoAsync_WebResponseFailed_ReturnsNull() Returns Type Description IEnumerator GetUserInfoAsync_WebResponseSuccessful_ReturnsUserInfo() Declaration public IEnumerator GetUserInfoAsync_WebResponseSuccessful_ReturnsUserInfo() Returns Type Description IEnumerator OpenLoginPage_UriGiven_BrowserOpened() Declaration public void OpenLoginPage_UriGiven_BrowserOpened() ParametersContainError_ErrorGiven_ErrorMessageSet() Declaration public void ParametersContainError_ErrorGiven_ErrorMessageSet() ParametersContainError_ErrorGiven_ReturnsTrue() Declaration public void ParametersContainError_ErrorGiven_ReturnsTrue() ParametersContainError_NoError_ErrorMessageEmpty() Declaration public void ParametersContainError_NoError_ErrorMessageEmpty() ParametersContainError_NoError_ReturnsFalse() Declaration public void ParametersContainError_NoError_ReturnsFalse()"
  },
  "api/i5.Toolkit.Core.Tests.OpenIDConnectClient.OpenIDConnectServiceTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.OpenIDConnectClient.OpenIDConnectServiceTests.html",
    "title": "Class OpenIDConnectServiceTests | i5 Toolkit Documentation",
    "keywords": "Class OpenIDConnectServiceTests Inheritance Object OpenIDConnectServiceTests Namespace : i5.Toolkit.Core.Tests.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class OpenIDConnectServiceTests Methods Cleanup_LoggedIn_RaisesLogoutEvent() Declaration public void Cleanup_LoggedIn_RaisesLogoutEvent() Cleanup_LoggedOut_DoesNotRaiseLogoutEvent() Declaration public void Cleanup_LoggedOut_DoesNotRaiseLogoutEvent() Cleanup_ServerNotRunning_ServerNotStopped() Declaration public void Cleanup_ServerNotRunning_ServerNotStopped() Cleanup_ServerRunning_StopsServer() Declaration public void Cleanup_ServerRunning_StopsServer() IsLoggedIn_Default_ReturnsFalse() Declaration public void IsLoggedIn_Default_ReturnsFalse() IsLoggedIn_SuccessfulLogin_ReturnsTrue() Declaration public void IsLoggedIn_SuccessfulLogin_ReturnsTrue() IsLoggedIn_SuccessfulLogout_ReturnsFalse() Declaration public void IsLoggedIn_SuccessfulLogout_ReturnsFalse() Logout_AccessTokenSet_AccessTokenCleared() Declaration public void Logout_AccessTokenSet_AccessTokenCleared() Logout_EventSubscribed_EventRaised() Declaration public void Logout_EventSubscribed_EventRaised() OnRedirect_AuthFlow_ExtractsCode() Declaration public void OnRedirect_AuthFlow_ExtractsCode() OnRedirect_AuthFlow_RetrievesAccessToken() Declaration public void OnRedirect_AuthFlow_RetrievesAccessToken() OnRedirect_ImplicitFlow_AccessTokenRetrieved() Declaration public void OnRedirect_ImplicitFlow_AccessTokenRetrieved() OnRedirect_RedirectContainsError_ErrorLogged() Declaration public void OnRedirect_RedirectContainsError_ErrorLogged() OnRedirect_Success_EventRaised() Declaration public void OnRedirect_Success_EventRaised() OpenLoginPage_Called_ServerStarted() Declaration public void OpenLoginPage_Called_ServerStarted() OpenLoginPage_NoRedirectUriGiven_UsesDefaultPage() Declaration public void OpenLoginPage_NoRedirectUriGiven_UsesDefaultPage() OpenLoginPage_OidcProviderNull_LogsError() Declaration public void OpenLoginPage_OidcProviderNull_LogsError() OpenLoginPage_OpensLoginPageWithHttpRedirect() Declaration public void OpenLoginPage_OpensLoginPageWithHttpRedirect() OpenLoginpage_RedirectUriGiven_RedirectUriInResponseString() Declaration public void OpenLoginpage_RedirectUriGiven_RedirectUriInResponseString() OpenLoginPage_ServerListenerNull_LogsError() Declaration public void OpenLoginPage_ServerListenerNull_LogsError() ResetScene() Resets the scene to the standard test scene before executed each test Declaration public void ResetScene() ServerListener_DefaultNotNull() Declaration public void ServerListener_DefaultNotNull()"
  },
  "api/i5.Toolkit.Core.Tests.OpenIDConnectClient.RedirectServerListenerTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.OpenIDConnectClient.RedirectServerListenerTests.html",
    "title": "Class RedirectServerListenerTests | i5 Toolkit Documentation",
    "keywords": "Class RedirectServerListenerTests Inheritance Object RedirectServerListenerTests Namespace : i5.Toolkit.Core.Tests.OpenIDConnectClient Assembly : cs.temp.dll.dll Syntax public class RedirectServerListenerTests Methods GenerateRedirectUri_CustomSchema_UsesCustomSchema() Declaration public void GenerateRedirectUri_CustomSchema_UsesCustomSchema() GenerateRedirectUri_DefaultSchema_ContainsPort() Declaration public void GenerateRedirectUri_DefaultSchema_ContainsPort() GenerateRedirectUri_DefaultSchema_StoresRedirectUri() Declaration public void GenerateRedirectUri_DefaultSchema_StoresRedirectUri() GenerateRedirectUri_DefaultSchema_UsesHttpSchema() Declaration public void GenerateRedirectUri_DefaultSchema_UsesHttpSchema() ResetScene() Resets the scene to the standard test scene before executed each test Declaration public void ResetScene() StartServer_ServerAlreadyRunning_WarningLogged() Declaration public void StartServer_ServerAlreadyRunning_WarningLogged() StopServerImmediately_ServerOffline_WarningLogged() Declaration public void StopServerImmediately_ServerOffline_WarningLogged() StopServerImmediately_ServerRunning_ServerActiveFalse() Declaration public void StopServerImmediately_ServerRunning_ServerActiveFalse()"
  },
  "api/i5.Toolkit.Core.Tests.ProceduralGeometry.GeometryConstructorTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.ProceduralGeometry.GeometryConstructorTests.html",
    "title": "Class GeometryConstructorTests | i5 Toolkit Documentation",
    "keywords": "Class GeometryConstructorTests Tests for the GeometryConstructor class Inheritance Object GeometryConstructorTests Namespace : i5.Toolkit.Core.Tests.ProceduralGeometry Assembly : cs.temp.dll.dll Syntax public class GeometryConstructorTests Methods AddQuad_QuadAdded_QuadInMesh() Checks that an added quad exists in the generated mesh Declaration public void AddQuad_QuadAdded_QuadInMesh() AddTriangle_TriangleAdded_TriangleInMesh() Checks that an added triangle exists in the generated mesh Declaration public void AddTriangle_TriangleAdded_TriangleInMesh() AddTriangleFan_FanAdded_FanInMesh() Checks that an added triangle fan exists in the generated mesh Declaration public void AddTriangleFan_FanAdded_FanInMesh() AddVertex_OneVertexAdded_VertexStored() Checks that an added vertex exists in the generated mesh Declaration public void AddVertex_OneVertexAdded_VertexStored() ConstructMesh_NoInput_GeneratesEmptyMesh() Checks that an empty mesh is generated if no input is provided to the geometry constructor Declaration public void ConstructMesh_NoInput_GeneratesEmptyMesh() ResetScene() Declaration public void ResetScene()"
  },
  "api/i5.Toolkit.Core.Tests.ProceduralGeometry.html": {
    "href": "api/i5.Toolkit.Core.Tests.ProceduralGeometry.html",
    "title": "Namespace i5.Toolkit.Core.Tests.ProceduralGeometry | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Tests.ProceduralGeometry Classes GeometryConstructorTests Tests for the GeometryConstructor class MaterialConstructorTests Tests for the MaterialConstructor class ObjectConstructorTests Tests for the ObjectConstructor class TextureConstructorTests Tests for the TextureConstructor class"
  },
  "api/i5.Toolkit.Core.Tests.ProceduralGeometry.MaterialConstructorTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.ProceduralGeometry.MaterialConstructorTests.html",
    "title": "Class MaterialConstructorTests | i5 Toolkit Documentation",
    "keywords": "Class MaterialConstructorTests Tests for the MaterialConstructor class Inheritance Object MaterialConstructorTests Namespace : i5.Toolkit.Core.Tests.ProceduralGeometry Assembly : cs.temp.dll.dll Syntax public class MaterialConstructorTests Methods ConstructMaterial_ColorSet_MaterialHasColor() Checks that the given color of the material constructor is set in the generated material Declaration public void ConstructMaterial_ColorSet_MaterialHasColor() ConstructMaterial_DefaultSettings_GeneratesStandardMaterial() Checks that the material constructor with default settings creates a standard material Declaration public void ConstructMaterial_DefaultSettings_GeneratesStandardMaterial() ConstructMaterial_FetchedTexture_TextureSetInMaterial() Checks that fetched textures are set in the generated material Declaration public IEnumerator ConstructMaterial_FetchedTexture_TextureSetInMaterial() Returns Type Description IEnumerator ConstructMaterial_NameSet_MaterialHasName() Checks that the given name of the material constructor is set in the generated material Declaration public void ConstructMaterial_NameSet_MaterialHasName() ConstructMaterial_ShaderSet_MaterialHasShader() Checks that the given shader of the material constructor is set in the generated material Declaration public void ConstructMaterial_ShaderSet_MaterialHasShader() ConstructMaterial_TexturesNotFetched_GivesWarning() Checks that a warning is logged if a material is constructed without fetching specified textures Declaration public void ConstructMaterial_TexturesNotFetched_GivesWarning() FetchDependencies_NoTexturesProvided_ReturnsTrue() Checks that FetchDependencies() returns true if there is nothing to fetch Declaration public IEnumerator FetchDependencies_NoTexturesProvided_ReturnsTrue() Returns Type Description IEnumerator FetchDependencies_TextureFetchFail_ReturnsFalse() Checks that FetchDependencies() returns false if the textures could not be fetched Declaration public IEnumerator FetchDependencies_TextureFetchFail_ReturnsFalse() Returns Type Description IEnumerator FetchDependencies_TextureFetchSuccess_ReturnsTrue() Checks that FetchDependencies() returns ture if the textures could be fetched Declaration public IEnumerator FetchDependencies_TextureFetchSuccess_ReturnsTrue() Returns Type Description IEnumerator ResetScene() Loads the test scene before each test and resets the texture constructors Declaration public void ResetScene()"
  },
  "api/i5.Toolkit.Core.Tests.ProceduralGeometry.ObjectConstructorTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.ProceduralGeometry.ObjectConstructorTests.html",
    "title": "Class ObjectConstructorTests | i5 Toolkit Documentation",
    "keywords": "Class ObjectConstructorTests Tests for the ObjectConstructor class Inheritance Object ObjectConstructorTests Namespace : i5.Toolkit.Core.Tests.ProceduralGeometry Assembly : cs.temp.dll.dll Syntax public class ObjectConstructorTests Methods ConstructObject_EmptyGeometry_CreatesEmptyGOWithWarning() Checks that an empty GeometryConstructor produces an empty GameObject and logs a warning Declaration public void ConstructObject_EmptyGeometry_CreatesEmptyGOWithWarning() ConstructObject_GeometryConstructorNull_CreatesEmptyGOWithWarning() Checks that a GeometryConstructor that is set to null produces an empty GameObject and logs a warning Declaration public void ConstructObject_GeometryConstructorNull_CreatesEmptyGOWithWarning() ConstructObject_MaterialConstructorGiven_AssignedMaterial() Checks if the settings of the material constructor are applied to the generated GameObject Declaration public void ConstructObject_MaterialConstructorGiven_AssignedMaterial() ConstructObject_WithGeometryDefaultMaterial_GOWithMeshDefaultMat() Checks if the default material settings create a GameObject with a default material Declaration public void ConstructObject_WithGeometryDefaultMaterial_GOWithMeshDefaultMat() ConstructObject_WithGeometryNullMaterial_GOWithMeshDefaultMat() Checks if the constructed object uses the default material if the material constructor is set to null Declaration public void ConstructObject_WithGeometryNullMaterial_GOWithMeshDefaultMat() ResetScene() Sets up the scene before every test Declaration public void ResetScene()"
  },
  "api/i5.Toolkit.Core.Tests.ProceduralGeometry.TextureConstructorTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.ProceduralGeometry.TextureConstructorTests.html",
    "title": "Class TextureConstructorTests | i5 Toolkit Documentation",
    "keywords": "Class TextureConstructorTests Tests for the TextureConstructor class Inheritance Object TextureConstructorTests Namespace : i5.Toolkit.Core.Tests.ProceduralGeometry Assembly : cs.temp.dll.dll Syntax public class TextureConstructorTests Methods FetchTextureAsync_WebRequestFailed_ReturnsNull() Checks that the texture constructor returns null if the web request failed Declaration public IEnumerator FetchTextureAsync_WebRequestFailed_ReturnsNull() Returns Type Description IEnumerator FetchTextureAsync_WebRequestSuccessful_ReturnsTexture() Checks that the texture constructor returns the correct texture Declaration public IEnumerator FetchTextureAsync_WebRequestSuccessful_ReturnsTexture() Returns Type Description IEnumerator ResetScene() Loads the SetupTestScene before every test Declaration public void ResetScene() TextureConstructor_ConstructorCalled_LoadPathInitialized() Checks that the LoadPath is initialized with the value specified in the constructor Declaration public void TextureConstructor_ConstructorCalled_LoadPathInitialized() TextureConstructor_ConstructorCalled_TextureLoaderInitialized() Checks that the TextureLoader is always initialized with a default object Declaration public void TextureConstructor_ConstructorCalled_TextureLoaderInitialized()"
  },
  "api/i5.Toolkit.Core.Tests.ServiceCore.html": {
    "href": "api/i5.Toolkit.Core.Tests.ServiceCore.html",
    "title": "Namespace i5.Toolkit.Core.Tests.ServiceCore | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Tests.ServiceCore Classes ServiceManagerRunnerTests ServiceManagerTests Tests for the ServiceManager class"
  },
  "api/i5.Toolkit.Core.Tests.ServiceCore.ServiceManagerRunnerTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.ServiceCore.ServiceManagerRunnerTests.html",
    "title": "Class ServiceManagerRunnerTests | i5 Toolkit Documentation",
    "keywords": "Class ServiceManagerRunnerTests Inheritance Object ServiceManagerRunnerTests Namespace : i5.Toolkit.Core.Tests.ServiceCore Assembly : cs.temp.dll.dll Syntax public class ServiceManagerRunnerTests Methods LoadScene() Declaration public void LoadScene() OnDestroy_ComponentDestroyed_CallsReceiverOnDestroy() Declaration public IEnumerator OnDestroy_ComponentDestroyed_CallsReceiverOnDestroy() Returns Type Description IEnumerator OnDestroy_GameObjectDestroyed_CallsReceiverOnDestroy() Declaration public IEnumerator OnDestroy_GameObjectDestroyed_CallsReceiverOnDestroy() Returns Type Description IEnumerator TearDownScene() Declaration public void TearDownScene() Update_CallsReceiverUpdate() Declaration public IEnumerator Update_CallsReceiverUpdate() Returns Type Description IEnumerator"
  },
  "api/i5.Toolkit.Core.Tests.ServiceCore.ServiceManagerTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.ServiceCore.ServiceManagerTests.html",
    "title": "Class ServiceManagerTests | i5 Toolkit Documentation",
    "keywords": "Class ServiceManagerTests Tests for the ServiceManager class Inheritance Object ServiceManagerTests Namespace : i5.Toolkit.Core.Tests.ServiceCore Assembly : cs.temp.dll.dll Syntax public class ServiceManagerTests Methods Constructor_Called_ComponentAddedToRunner() Declaration public void Constructor_Called_ComponentAddedToRunner() Constructor_Called_RunnerCreated() Checks that a runner object was created if an instance is requested in an empty scene Declaration public void Constructor_Called_RunnerCreated() GetService_ServiceNotRegistered_ThrowsException() Checks that GetService throws an exception if a service is called which is not registered Declaration public void GetService_ServiceNotRegistered_ThrowsException() GetService_ServiceRegistered_ReturnsService() Checks that GetService returns registered services Declaration public void GetService_ServiceRegistered_ReturnsService() LoadScene() Declaration public void LoadScene() RegisterService_ServiceRegistered_ServiceFound() Checks that a registered service is available Declaration public void RegisterService_ServiceRegistered_ServiceFound() RegisterService_ServiceRegistered_ServiceInitialized() Checks that a registered service is initialized Declaration public void RegisterService_ServiceRegistered_ServiceInitialized() RegisterService_ServiceRegisteredDouble_ErrorLogged() Checks that a service which is registered on top of an existing service returns logs an error Declaration public void RegisterService_ServiceRegisteredDouble_ErrorLogged() RegisterService_ServiceRegisteredDouble_FirstServiceStored() Checks that the first registered service keeps being used if we try to register another service on top of it Declaration public void RegisterService_ServiceRegisteredDouble_FirstServiceStored() RemoveServcie_ServiceExists_ServiceCleanedUp() Checks that a service which is being removed is cleaned up properly Declaration public void RemoveServcie_ServiceExists_ServiceCleanedUp() RemoveService_ServiceDoesNotExist_ThrowsException() Checks that RemoveService throws an exception if we try to remove a service which does not exist Declaration public void RemoveService_ServiceDoesNotExist_ThrowsException() RemoveService_ServiceExists_ServiceRemoved() Checks that existing services are removed by RemoveService Declaration public void RemoveService_ServiceExists_ServiceRemoved() ResetScene() Resets the scene to the standard test scene before executed each test Declaration public void ResetScene() ResetStatics() Resets the static variables in the service manager again Declaration public void ResetStatics() Runner_RunnerComponentDestroyed_CreatesNewRunner() Declaration public IEnumerator Runner_RunnerComponentDestroyed_CreatesNewRunner() Returns Type Description IEnumerator Runner_RunnerComponentDestroyed_DestroysGameObject() Declaration public IEnumerator Runner_RunnerComponentDestroyed_DestroysGameObject() Returns Type Description IEnumerator Runner_RunnerGameObjectDestroyed_CreatesNewRunner() Checks that a new runner is created if the existing runner was destroyed Declaration public IEnumerator Runner_RunnerGameObjectDestroyed_CreatesNewRunner() Returns Type Description IEnumerator ServiceExists_ServiceNotRegistered_ReturnsFalse() Checks that ServiceExists returns false for services that do not exist Declaration public void ServiceExists_ServiceNotRegistered_ReturnsFalse() ServiceExists_ServiceRegistered_ReturnsTrue() Checks that ServiceExists returns true for services that exist Declaration public void ServiceExists_ServiceRegistered_ReturnsTrue() TearDownScene() Declaration public void TearDownScene() Update_NoUpdateableServices_NoError() Declaration public IEnumerator Update_NoUpdateableServices_NoError() Returns Type Description IEnumerator Update_UpdateableServiceDisabled_ServiceNotUpdated() Declaration public IEnumerator Update_UpdateableServiceDisabled_ServiceNotUpdated() Returns Type Description IEnumerator Update_UpdateableServiceEnabled_ServiceUpdated() Declaration public IEnumerator Update_UpdateableServiceEnabled_ServiceUpdated() Returns Type Description IEnumerator"
  },
  "api/i5.Toolkit.Core.Tests.Utilities.ComponentUtilitiesTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.Utilities.ComponentUtilitiesTests.html",
    "title": "Class ComponentUtilitiesTests | i5 Toolkit Documentation",
    "keywords": "Class ComponentUtilitiesTests Tests for the Component Utilities Inheritance Object ComponentUtilitiesTests Namespace : i5.Toolkit.Core.Tests.Utilities Assembly : cs.temp.dll.dll Syntax public class ComponentUtilitiesTests Methods GetOrAddComponent_ComponentDoesNotExist_ComponentAdded() Checks if a component is added if it does not exist Declaration public void GetOrAddComponent_ComponentDoesNotExist_ComponentAdded() GetOrAddComponent_ComponentExists_FindsComponent() Checks if a component is found if it already exists Declaration public void GetOrAddComponent_ComponentExists_FindsComponent() ResetScene() Resets the scene to the standard test scene before executed each test Declaration public void ResetScene()"
  },
  "api/i5.Toolkit.Core.Tests.Utilities.ConversionUtilsTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.Utilities.ConversionUtilsTests.html",
    "title": "Class ConversionUtilsTests | i5 Toolkit Documentation",
    "keywords": "Class ConversionUtilsTests Tests for the conversion utils class Inheritance Object ConversionUtilsTests Namespace : i5.Toolkit.Core.Tests.Utilities Assembly : cs.temp.dll.dll Syntax public class ConversionUtilsTests Methods ColorToVector3_Components1_VectorComponentsMatch() Checks if components smaller or equal to one are converted correctly Declaration public void ColorToVector3_Components1_VectorComponentsMatch() ColorToVector3_ComponentsBigger1_VectorComponentsMatch() Checks if components bigger than one are converted correctly Declaration public void ColorToVector3_ComponentsBigger1_VectorComponentsMatch() ColorToVector3_ComponentsNegative_VectorComponentsMatch() Checks if negative components are converted correctly Declaration public void ColorToVector3_ComponentsNegative_VectorComponentsMatch() ColorToVector3_Zero_VectorComponentsMatch() Checks if black is correctly converted Declaration public void ColorToVector3_Zero_VectorComponentsMatch() ColorToVector4_Components1_VectorComponentsMatch() Checks if components smaller or equal to one are converted correctly Declaration public void ColorToVector4_Components1_VectorComponentsMatch() ColorToVector4_ComponentsBigger1_VectorComponentsMatch() Checks if components bigger than one are converted correctly Declaration public void ColorToVector4_ComponentsBigger1_VectorComponentsMatch() ColorToVector4_ComponentsNegative_VectorComponentsMatch() Checks if negative components are converted correctly Declaration public void ColorToVector4_ComponentsNegative_VectorComponentsMatch() ColorToVector4_Zero_VectorComponentsMatch() Checks if black is correctly converted Declaration public void ColorToVector4_Zero_VectorComponentsMatch() ResetScene() Resets the scene before each test Declaration public void ResetScene() Vector3ToColor_Components1_ColorComponentsMatch() Checks if components smaller or equal to one are converted correctly Declaration public void Vector3ToColor_Components1_ColorComponentsMatch() Vector3ToColor_ComponentsBigger1_ColorComponentsMatch() Checks if components bigger than one are converted correctly Declaration public void Vector3ToColor_ComponentsBigger1_ColorComponentsMatch() Vector3ToColor_ComponentsNegative_ColorComponentsMatch() Checks if negative components are converted correctly Declaration public void Vector3ToColor_ComponentsNegative_ColorComponentsMatch() Vector3ToColor_Zero_ColorComponentsMatch() Checks if the zero vector is correctly converted Declaration public void Vector3ToColor_Zero_ColorComponentsMatch() Vector4ToColor_Components1_ColorComponentsMatch() Checks if components smaller or equal to one are converted correctly Declaration public void Vector4ToColor_Components1_ColorComponentsMatch() Vector4ToColor_ComponentsBigger1_ColorComponentsMatch() Checks if components bigger than one are converted correctly Declaration public void Vector4ToColor_ComponentsBigger1_ColorComponentsMatch() Vector4ToColor_ComponentsNegative_ColorComponentsMatch() Checks if negative components are converted correctly Declaration public void Vector4ToColor_ComponentsNegative_ColorComponentsMatch() Vector4ToColor_Zero_ColorComponentsMatch() Checks if the zero vector is correctly converted Declaration public void Vector4ToColor_Zero_ColorComponentsMatch()"
  },
  "api/i5.Toolkit.Core.Tests.Utilities.html": {
    "href": "api/i5.Toolkit.Core.Tests.Utilities.html",
    "title": "Namespace i5.Toolkit.Core.Tests.Utilities | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Tests.Utilities Classes ComponentUtilitiesTests Tests for the Component Utilities ConversionUtilsTests Tests for the conversion utils class i5DebugTests NameValueCollectionExtensionsTests ObjectPoolTests Tests for the ObjectPool ParserUtilsTests Tests for the parser utils tests UriUtilsTests Tests for the UriUtils class"
  },
  "api/i5.Toolkit.Core.Tests.Utilities.i5DebugTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.Utilities.i5DebugTests.html",
    "title": "Class i5DebugTests | i5 Toolkit Documentation",
    "keywords": "Class i5DebugTests Inheritance Object i5DebugTests Namespace : i5.Toolkit.Core.Tests.Utilities Assembly : cs.temp.dll.dll Syntax public class i5DebugTests Methods Log_MonoBehaviourSender_MessageLogged() Declaration public void Log_MonoBehaviourSender_MessageLogged() Log_ObjectSender_MessageLogged() Declaration public void Log_ObjectSender_MessageLogged() LogError_MonoBehaviourSender_MessageLogged() Declaration public void LogError_MonoBehaviourSender_MessageLogged() LogError_ObjectSender_MessageLogged() Declaration public void LogError_ObjectSender_MessageLogged() LogWarning_MonoBehaviourSender_MessageLogged() Declaration public void LogWarning_MonoBehaviourSender_MessageLogged() LogWarning_ObjectSender_MessageLogged() Declaration public void LogWarning_ObjectSender_MessageLogged() ResetScene() Declaration public void ResetScene()"
  },
  "api/i5.Toolkit.Core.Tests.Utilities.NameValueCollectionExtensionsTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.Utilities.NameValueCollectionExtensionsTests.html",
    "title": "Class NameValueCollectionExtensionsTests | i5 Toolkit Documentation",
    "keywords": "Class NameValueCollectionExtensionsTests Inheritance Object NameValueCollectionExtensionsTests Namespace : i5.Toolkit.Core.Tests.Utilities Assembly : cs.temp.dll.dll Syntax public class NameValueCollectionExtensionsTests Methods ToDictionary_EmptyCollection_ReturnsEmptyDictionary() Declaration public void ToDictionary_EmptyCollection_ReturnsEmptyDictionary() ToDictionary_EntryAdded_DictionaryContainsKey() Declaration public void ToDictionary_EntryAdded_DictionaryContainsKey() ToDictionary_EntryAdded_DictionaryContainsValue() Declaration public void ToDictionary_EntryAdded_DictionaryContainsValue()"
  },
  "api/i5.Toolkit.Core.Tests.Utilities.ObjectPoolTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.Utilities.ObjectPoolTests.html",
    "title": "Class ObjectPoolTests | i5 Toolkit Documentation",
    "keywords": "Class ObjectPoolTests Tests for the ObjectPool Inheritance Object ObjectPoolTests Namespace : i5.Toolkit.Core.Tests.Utilities Assembly : cs.temp.dll.dll Syntax public class ObjectPoolTests Methods ClearPool_ClearedCustomPool_UsesFactoryAfterClean() Checks that the factory method is used after a non-empty custom pool was cleared (meaning that it is now empty) Declaration public void ClearPool_ClearedCustomPool_UsesFactoryAfterClean() ClearPool_ClearedDefaultPool_UsesFactoryAfterClean() Checks that the factory method is used after a non-empty default pool was cleared (meaning that it is now empty) Declaration public void ClearPool_ClearedDefaultPool_UsesFactoryAfterClean() ClearPool_PoolDoesNotExist_ThrowsInvalidOperationException() Checks that an exception is thrown if a pool is cleared that does not exist Declaration public void ClearPool_PoolDoesNotExist_ThrowsInvalidOperationException() CreatePool_MultiplePools_IdsIncrement() Checks if the pool ids are incremented if multiple pools are created Declaration public void CreatePool_MultiplePools_IdsIncrement() CreatePool_SinglePool_Accessible() Checks if the created pool is accessible Declaration public void CreatePool_SinglePool_Accessible() CreatePool_SinglePoolCapacity_ReturnsIdBigger0() Checks if an id in the correct range is created if a new pool with a pre-defined capacity is created Declaration public void CreatePool_SinglePoolCapacity_ReturnsIdBigger0() CreatePool_SinglePoolNoCapacity_ReturnsIdBigger0() Checks if an id in the correct range is created if a new pool is created Declaration public void CreatePool_SinglePoolNoCapacity_ReturnsIdBigger0() ReleaseResource_CustomPool_StoredInPool() Checks that a release object is stored in a custom pool Declaration public void ReleaseResource_CustomPool_StoredInPool() ReleaseResource_DefaultPool_StoredInPool() Checks that a released object is stored in the default pool Declaration public void ReleaseResource_DefaultPool_StoredInPool() ReleaseResource_PoolDoesNotExist_ThrowsInvalidOperationException() Checks that an exception is thrown if an object is released to a pool that does not exist Declaration public void ReleaseResource_PoolDoesNotExist_ThrowsInvalidOperationException() RemovePool_CreateAndRemovePool_PoolNotAccessibleAnymore() Checks if a removed pool is not accessible anymore Declaration public void RemovePool_CreateAndRemovePool_PoolNotAccessibleAnymore() RemovePool_PoolDoesNotExist_LogsWarning() Checks that a warning is logged if a pool is removed that did not exist Declaration public void RemovePool_PoolDoesNotExist_LogsWarning() RemovePool_RemovePool0_LogsError() Checks that the default pool cannot be removed Declaration public void RemovePool_RemovePool0_LogsError() RequestResource_CustomPoolAndEmpty_UsesFactory() Checks that the factory method is used if an object is requested from an empt custom pool Declaration public void RequestResource_CustomPoolAndEmpty_UsesFactory() RequestResource_CustomPoolContainsMultipleObj_UsesFIFO() Checks that the custom pool uses FIFO if it contains multiple objects and one is requested Declaration public void RequestResource_CustomPoolContainsMultipleObj_UsesFIFO() RequestResource_CustomPoolContainsObj_ReturnsObj() Checks that the object is returned that exists in a custom pool if it is requested Declaration public void RequestResource_CustomPoolContainsObj_ReturnsObj() RequestResource_DefaultPoolAndEmpty_UsesFactory() Checks that the factory method is used if a resource is requested from the empty default pool Declaration public void RequestResource_DefaultPoolAndEmpty_UsesFactory() RequestResource_DefaultPoolContainsMultipleObj_UsesFIFO() Checks that an object is selected based on FIFO if multiple objects are present in the default pool and one is requested Declaration public void RequestResource_DefaultPoolContainsMultipleObj_UsesFIFO() RequestResource_DefaultPoolContainsObj_ReturnsObj() Checks that the object is returned if there is an object in the default pool and a resource is requested Declaration public void RequestResource_DefaultPoolContainsObj_ReturnsObj() RequestResource_PoolDoesNotExist_ThrowsInvalidOperationException() Checks that an exception is thrown if an object is requested from a pool that does not exist Declaration public void RequestResource_PoolDoesNotExist_ThrowsInvalidOperationException() ResetScene() Loads a new scene for each test Declaration public void ResetScene()"
  },
  "api/i5.Toolkit.Core.Tests.Utilities.ParserUtilsTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.Utilities.ParserUtilsTests.html",
    "title": "Class ParserUtilsTests | i5 Toolkit Documentation",
    "keywords": "Class ParserUtilsTests Tests for the parser utils tests Inheritance Object ParserUtilsTests Namespace : i5.Toolkit.Core.Tests.Utilities Assembly : cs.temp.dll.dll Syntax public class ParserUtilsTests Methods ResetScene() Resets the scene before each test Declaration public void ResetScene() TryParseSpaceSeparatedVector2_CorrectFormat_OutParamCorrect() Checks that a vector in the correct format gives the correct value Declaration public void TryParseSpaceSeparatedVector2_CorrectFormat_OutParamCorrect() TryParseSpaceSeparatedVector2_CorrectFormat_ReturnsTrue() Checks that a vector in the correct format is parsed Declaration public void TryParseSpaceSeparatedVector2_CorrectFormat_ReturnsTrue() TryParseSpaceSeparatedVector2_FourNumbers_OutParamDefault() Checks that a string with four numbers gives a default value Declaration public void TryParseSpaceSeparatedVector2_FourNumbers_OutParamDefault() TryParseSpaceSeparatedVector2_FourNumbers_ReturnsFalse() Checks that a string with four numbers returns false Declaration public void TryParseSpaceSeparatedVector2_FourNumbers_ReturnsFalse() TryParseSpaceSeparatedVector2_InvalidFormat_OutParamDefault() Checks that a string in the invalid format give a default value Declaration public void TryParseSpaceSeparatedVector2_InvalidFormat_OutParamDefault() TryParseSpaceSeparatedVector2_InvalidFormat_ReturnsFalse() Checks that a string in the invalid format returns false Declaration public void TryParseSpaceSeparatedVector2_InvalidFormat_ReturnsFalse() TryParseSpaceSeparatedVector2_InvalidNumber_OutParamDefault() Checks that invalid strings in the right format give a default value Declaration public void TryParseSpaceSeparatedVector2_InvalidNumber_OutParamDefault() TryParseSpaceSeparatedVector2_InvalidNumber_ReturnsFalse() Checks that invalid strings in the right format return false Declaration public void TryParseSpaceSeparatedVector2_InvalidNumber_ReturnsFalse() TryParseSpaceSeparatedVector2_OneNumber_OutParamDefault() Checks that strings with just one number give a default value Declaration public void TryParseSpaceSeparatedVector2_OneNumber_OutParamDefault() TryParseSpaceSeparatedVector2_OneNumber_ReturnsFalse() Checks that strings with just one number return false Declaration public void TryParseSpaceSeparatedVector2_OneNumber_ReturnsFalse() TryParseSpaceSeparatedVector2_ThreeNumbers_OutParamCorrect() Checks that a string with three numbers give a default value Declaration public void TryParseSpaceSeparatedVector2_ThreeNumbers_OutParamCorrect() TryParseSpaceSeparatedVector2_ThreeNumbers_ReturnsTrue() Checks that a string with three numbers returns true Declaration public void TryParseSpaceSeparatedVector2_ThreeNumbers_ReturnsTrue() TryParseSpaceSeparatedVector2_VectorWithTwoSpaces_OutParamCorrect() Checks that a string where numbers are separated by multiple spaces gives the correct value Declaration public void TryParseSpaceSeparatedVector2_VectorWithTwoSpaces_OutParamCorrect() TryParseSpaceSeparatedVector2_VectorWithTwoSpaces_ReturnsTrue() Checks that a string where numbers are separated by multiple spaces return true Declaration public void TryParseSpaceSeparatedVector2_VectorWithTwoSpaces_ReturnsTrue() TryParseSpaceSeparatedVector3_CorrectFormat_OutParamCorrect() Checks that a vector in the correct format gives the correct value Declaration public void TryParseSpaceSeparatedVector3_CorrectFormat_OutParamCorrect() TryParseSpaceSeparatedVector3_CorrectFormat_ReturnsTrue() Checks that a vector in the correct format is parsed Declaration public void TryParseSpaceSeparatedVector3_CorrectFormat_ReturnsTrue() TryParseSpaceSeparatedVector3_FourNumbers_OutParamCorrect() Checks that a string with four numbers gives the correct value Declaration public void TryParseSpaceSeparatedVector3_FourNumbers_OutParamCorrect() TryParseSpaceSeparatedVector3_FourNumbers_ReturnsTrue() Checks that a string with four numbers returns true Declaration public void TryParseSpaceSeparatedVector3_FourNumbers_ReturnsTrue() TryParseSpaceSeparatedVector3_InvalidFormat_OutParamDefault() Checks that a string in the invalid format give a default value Declaration public void TryParseSpaceSeparatedVector3_InvalidFormat_OutParamDefault() TryParseSpaceSeparatedVector3_InvalidFormat_ReturnsFalse() Checks that a string in the invalid format returns false Declaration public void TryParseSpaceSeparatedVector3_InvalidFormat_ReturnsFalse() TryParseSpaceSeparatedVector3_InvalidNumber_OutParamDefault() Checks that invalid strings in the right format give a default value Declaration public void TryParseSpaceSeparatedVector3_InvalidNumber_OutParamDefault() TryParseSpaceSeparatedVector3_InvalidNumber_ReturnsFalse() Checks that invalid strings in the right format return false Declaration public void TryParseSpaceSeparatedVector3_InvalidNumber_ReturnsFalse() TryParseSpaceSeparatedVector3_OneNumber_OutParamDefault() Checks that strings with just one number give a default value Declaration public void TryParseSpaceSeparatedVector3_OneNumber_OutParamDefault() TryParseSpaceSeparatedVector3_OneNumber_ReturnsFalse() Checks that strings with just one number return false Declaration public void TryParseSpaceSeparatedVector3_OneNumber_ReturnsFalse() TryParseSpaceSeparatedVector3_TwoNumbers_OutParamCorrect() Checks that a string with two numbers gives a default value Declaration public void TryParseSpaceSeparatedVector3_TwoNumbers_OutParamCorrect() TryParseSpaceSeparatedVector3_TwoNumbers_ReturnsFalse() Checks that a string with three numbers returns false Declaration public void TryParseSpaceSeparatedVector3_TwoNumbers_ReturnsFalse() TryParseSpaceSeparatedVector3_VectorWithTwoSpaces_OutParamCorrect() Checks that a string where numbers are separated by multiple spaces gives the correct value Declaration public void TryParseSpaceSeparatedVector3_VectorWithTwoSpaces_OutParamCorrect() TryParseSpaceSeparatedVector3_VectorWithTwoSpaces_ReturnsTrue() Checks that a string where numbers are separated by multiple spaces return true Declaration public void TryParseSpaceSeparatedVector3_VectorWithTwoSpaces_ReturnsTrue()"
  },
  "api/i5.Toolkit.Core.Tests.Utilities.UriUtilsTests.html": {
    "href": "api/i5.Toolkit.Core.Tests.Utilities.UriUtilsTests.html",
    "title": "Class UriUtilsTests | i5 Toolkit Documentation",
    "keywords": "Class UriUtilsTests Tests for the UriUtils class Inheritance Object UriUtilsTests Namespace : i5.Toolkit.Core.Tests.Utilities Assembly : cs.temp.dll.dll Syntax public class UriUtilsTests Methods DictionaryToParameterString_EmptyDictionary_EmptyString() Declaration public void DictionaryToParameterString_EmptyDictionary_EmptyString() DictionaryToParameterString_MultipleEntries_SplitByAnd() Declaration public void DictionaryToParameterString_MultipleEntries_SplitByAnd() DictionaryToParameterString_OneEntry_ReturnsKeyValue() Declaration public void DictionaryToParameterString_OneEntry_ReturnsKeyValue() GetUriParameters_MultipleParameters_DictionaryContainsKeyValuePairs() Checks that all parameters are returned if a Uri contains multiple parameters Declaration public void GetUriParameters_MultipleParameters_DictionaryContainsKeyValuePairs() GetUriParameters_NoParameters_ReturnsEmptyDictionary() Checks if GetUriParameters returns any empty dictionary if the given Uri does not contain parameters Declaration public void GetUriParameters_NoParameters_ReturnsEmptyDictionary() GetUriParameters_OneParameter_DictionaryContainsKeyValuePair() Checks that GetUriParameters returns the parameter if one is given in a Uri Declaration public void GetUriParameters_OneParameter_DictionaryContainsKeyValuePair() WordArrayToSpaceEscapedString_EmptyArray_EmptyString() Declaration public void WordArrayToSpaceEscapedString_EmptyArray_EmptyString() WordArrayToSpaceEscapedString_MultipleWords_CreatesString() Declaration public void WordArrayToSpaceEscapedString_MultipleWords_CreatesString() WordArrayToSpaceEscapedString_OneWord_CreatesString() Declaration public void WordArrayToSpaceEscapedString_OneWord_CreatesString()"
  },
  "api/i5.Toolkit.Core.TestUtilities.FakeContentLoaderFactory.html": {
    "href": "api/i5.Toolkit.Core.TestUtilities.FakeContentLoaderFactory.html",
    "title": "Class FakeContentLoaderFactory | i5 Toolkit Documentation",
    "keywords": "Class FakeContentLoaderFactory Inheritance Object FakeContentLoaderFactory Namespace : i5.Toolkit.Core.TestUtilities Assembly : cs.temp.dll.dll Syntax public static class FakeContentLoaderFactory Methods CreateFakeFailLoader<T>() Declaration public static IContentLoader<T> CreateFakeFailLoader<T>() Returns Type Description IContentLoader <T> Type Parameters Name Description T CreateFakeLoader<T>(T) Declaration public static IContentLoader<T> CreateFakeLoader<T>(T content) Parameters Type Name Description T content Returns Type Description IContentLoader <T> Type Parameters Name Description T"
  },
  "api/i5.Toolkit.Core.TestUtilities.html": {
    "href": "api/i5.Toolkit.Core.TestUtilities.html",
    "title": "Namespace i5.Toolkit.Core.TestUtilities | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.TestUtilities Classes FakeContentLoaderFactory TestObject An object for Object Pool tests TestUpdateService"
  },
  "api/i5.Toolkit.Core.TestUtilities.TestObject.html": {
    "href": "api/i5.Toolkit.Core.TestUtilities.TestObject.html",
    "title": "Class TestObject | i5 Toolkit Documentation",
    "keywords": "Class TestObject An object for Object Pool tests Inheritance Object TestObject Namespace : i5.Toolkit.Core.TestUtilities Assembly : cs.temp.dll.dll Syntax public class TestObject Constructors TestObject(Int32) Declaration public TestObject(int id) Parameters Type Name Description Int32 id Properties Id Declaration public int Id { get; } Property Value Type Description Int32"
  },
  "api/i5.Toolkit.Core.TestUtilities.TestUpdateService.html": {
    "href": "api/i5.Toolkit.Core.TestUtilities.TestUpdateService.html",
    "title": "Class TestUpdateService | i5 Toolkit Documentation",
    "keywords": "Class TestUpdateService Inheritance Object TestUpdateService Namespace : i5.Toolkit.Core.TestUtilities Assembly : cs.temp.dll.dll Syntax public class TestUpdateService : IUpdateableService Properties Enabled Declaration public bool Enabled { get; set; } Property Value Type Description Boolean TestCounter Declaration public int TestCounter { get; } Property Value Type Description Int32 Methods Cleanup() Declaration public void Cleanup() Initialize(IServiceManager) Declaration public void Initialize(IServiceManager owner) Parameters Type Name Description IServiceManager owner Update() Declaration public void Update()"
  },
  "api/i5.Toolkit.Core.TestUtilities.UIOperator.html": {
    "href": "api/i5.Toolkit.Core.TestUtilities.UIOperator.html",
    "title": "Namespace i5.Toolkit.Core.TestUtilities.UIOperator | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.TestUtilities.UIOperator Classes UiElementNotFoundException UiOperator"
  },
  "api/i5.Toolkit.Core.TestUtilities.UIOperator.UiElementNotFoundException.html": {
    "href": "api/i5.Toolkit.Core.TestUtilities.UIOperator.UiElementNotFoundException.html",
    "title": "Class UiElementNotFoundException | i5 Toolkit Documentation",
    "keywords": "Class UiElementNotFoundException Inheritance Object UiElementNotFoundException Namespace : i5.Toolkit.Core.TestUtilities.UIOperator Assembly : cs.temp.dll.dll Syntax public class UiElementNotFoundException : Exception Constructors UiElementNotFoundException() Declaration public UiElementNotFoundException() UiElementNotFoundException(String) Declaration public UiElementNotFoundException(string message) Parameters Type Name Description String message UiElementNotFoundException(String, Exception) Declaration public UiElementNotFoundException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Methods Create(GameObject, MonoBehaviour) Declaration public static UiElementNotFoundException Create(GameObject go, MonoBehaviour monoBehaviour) Parameters Type Name Description GameObject go MonoBehaviour monoBehaviour Returns Type Description UiElementNotFoundException"
  },
  "api/i5.Toolkit.Core.TestUtilities.UIOperator.UiOperator.html": {
    "href": "api/i5.Toolkit.Core.TestUtilities.UIOperator.UiOperator.html",
    "title": "Class UiOperator | i5 Toolkit Documentation",
    "keywords": "Class UiOperator Inheritance Object UiOperator Namespace : i5.Toolkit.Core.TestUtilities.UIOperator Assembly : cs.temp.dll.dll Syntax public static class UiOperator Methods InputFieldEndEdit(InputField) Declaration public static void InputFieldEndEdit(InputField inputField) Parameters Type Name Description InputField inputField InputFieldEndEdit(String) Declaration public static void InputFieldEndEdit(string inputFieldName) Parameters Type Name Description String inputFieldName PressButton(Button) Declaration public static void PressButton(Button button) Parameters Type Name Description Button button PressButton(String) Declaration public static void PressButton(string buttonName) Parameters Type Name Description String buttonName SetDropdownIndex(Dropdown, Int32) Declaration public static void SetDropdownIndex(Dropdown dropdown, int index) Parameters Type Name Description Dropdown dropdown Int32 index SetDropdownIndex(String, Int32) Declaration public static void SetDropdownIndex(string dropdownName, int index) Parameters Type Name Description String dropdownName Int32 index SetInputFieldText(InputField, String) Declaration public static void SetInputFieldText(InputField inputField, string text) Parameters Type Name Description InputField inputField String text SetInputFieldText(String, String) Declaration public static void SetInputFieldText(string inputFieldName, string text) Parameters Type Name Description String inputFieldName String text SetScrollbarValue(Scrollbar, Single) Declaration public static void SetScrollbarValue(Scrollbar scrollbar, float value) Parameters Type Name Description Scrollbar scrollbar Single value SetScrollbarValue(String, Single) Declaration public static void SetScrollbarValue(string scrollBarName, float value) Parameters Type Name Description String scrollBarName Single value SetScrollRectValue(ScrollRect, Vector2) Declaration public static void SetScrollRectValue(ScrollRect scrollRect, Vector2 value) Parameters Type Name Description ScrollRect scrollRect Vector2 value SetScrollRectValue(String, Vector2) Declaration public static void SetScrollRectValue(string scrollRectName, Vector2 value) Parameters Type Name Description String scrollRectName Vector2 value SetSliderValue(Slider, Single) Declaration public static void SetSliderValue(Slider slider, float value) Parameters Type Name Description Slider slider Single value SetSliderValue(String, Single) Declaration public static void SetSliderValue(string sliderName, float value) Parameters Type Name Description String sliderName Single value SetToggleValue(String, Boolean) Declaration public static void SetToggleValue(string toggleName, bool value) Parameters Type Name Description String toggleName Boolean value SetToggleValue(Toggle, Boolean) Declaration public static void SetToggleValue(Toggle toggle, bool value) Parameters Type Name Description Toggle toggle Boolean value ToggleToggle(String) Declaration public static void ToggleToggle(string toggleName) Parameters Type Name Description String toggleName ToggleToggle(Toggle) Declaration public static void ToggleToggle(Toggle toggle) Parameters Type Name Description Toggle toggle"
  },
  "api/i5.Toolkit.Core.Utilities.Async.AwaiterExtensions.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Async.AwaiterExtensions.html",
    "title": "Class AwaiterExtensions | i5 Toolkit Documentation",
    "keywords": "Class AwaiterExtensions We could just add a generic GetAwaiter to YieldInstruction and CustomYieldInstruction but instead we add specific methods to each derived class to allow for return values that make the most sense for the specific instruction type. Inheritance Object AwaiterExtensions Namespace : i5.Toolkit.Core.Utilities.Async Assembly : cs.temp.dll.dll Syntax public static class AwaiterExtensions Methods GetAwaiter(AssetBundleCreateRequest) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter<AssetBundle> GetAwaiter(this AssetBundleCreateRequest instruction) Parameters Type Name Description AssetBundleCreateRequest instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter < AssetBundle > GetAwaiter(AssetBundleRequest) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter<Object> GetAwaiter(this AssetBundleRequest instruction) Parameters Type Name Description AssetBundleRequest instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter < Object > GetAwaiter(AsyncOperation) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter<AsyncOperation> GetAwaiter(this AsyncOperation instruction) Parameters Type Name Description AsyncOperation instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter < AsyncOperation > GetAwaiter(WaitForUpdate) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(this WaitForUpdate instruction) Parameters Type Name Description WaitForUpdate instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(IEnumerator) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter<object> GetAwaiter(this IEnumerator coroutine) Parameters Type Name Description IEnumerator coroutine Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter < Object > GetAwaiter(ResourceRequest) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter<Object> GetAwaiter(this ResourceRequest instruction) Parameters Type Name Description ResourceRequest instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter < Object > GetAwaiter(WaitForEndOfFrame) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(this WaitForEndOfFrame instruction) Parameters Type Name Description WaitForEndOfFrame instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(WaitForFixedUpdate) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(this WaitForFixedUpdate instruction) Parameters Type Name Description WaitForFixedUpdate instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(WaitForSeconds) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(this WaitForSeconds instruction) Parameters Type Name Description WaitForSeconds instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(WaitForSecondsRealtime) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(this WaitForSecondsRealtime instruction) Parameters Type Name Description WaitForSecondsRealtime instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(WaitUntil) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(this WaitUntil instruction) Parameters Type Name Description WaitUntil instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(WaitWhile) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter(this WaitWhile instruction) Parameters Type Name Description WaitWhile instruction Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter GetAwaiter<T>(IEnumerator<T>) Declaration public static AwaiterExtensions.SimpleCoroutineAwaiter<T> GetAwaiter<T>(this IEnumerator<T> coroutine) Parameters Type Name Description IEnumerator <T> coroutine Returns Type Description AwaiterExtensions.SimpleCoroutineAwaiter <T> Type Parameters Name Description T"
  },
  "api/i5.Toolkit.Core.Utilities.Async.AwaiterExtensions.SimpleCoroutineAwaiter.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Async.AwaiterExtensions.SimpleCoroutineAwaiter.html",
    "title": "Class AwaiterExtensions.SimpleCoroutineAwaiter | i5 Toolkit Documentation",
    "keywords": "Class AwaiterExtensions.SimpleCoroutineAwaiter Processes Coroutine and notifies completion. Inheritance Object AwaiterExtensions.SimpleCoroutineAwaiter Namespace : i5.Toolkit.Core.Utilities.Async Assembly : cs.temp.dll.dll Syntax public class SimpleCoroutineAwaiter : INotifyCompletion Properties IsCompleted Declaration public bool IsCompleted { get; } Property Value Type Description Boolean Methods Complete(Exception) Declaration public void Complete(Exception e) Parameters Type Name Description Exception e GetResult() Declaration public void GetResult()"
  },
  "api/i5.Toolkit.Core.Utilities.Async.AwaiterExtensions.SimpleCoroutineAwaiter-1.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Async.AwaiterExtensions.SimpleCoroutineAwaiter-1.html",
    "title": "Class AwaiterExtensions.SimpleCoroutineAwaiter<T> | i5 Toolkit Documentation",
    "keywords": "Class AwaiterExtensions.SimpleCoroutineAwaiter<T> Processes Coroutine and notifies completion with result. Inheritance Object AwaiterExtensions.SimpleCoroutineAwaiter<T> Namespace : i5.Toolkit.Core.Utilities.Async Assembly : cs.temp.dll.dll Syntax public class SimpleCoroutineAwaiter<T> : INotifyCompletion Type Parameters Name Description T The result type. Properties IsCompleted Declaration public bool IsCompleted { get; } Property Value Type Description Boolean Methods Complete(T, Exception) Declaration public void Complete(T taskResult, Exception e) Parameters Type Name Description T taskResult Exception e GetResult() Declaration public T GetResult() Returns Type Description T"
  },
  "api/i5.Toolkit.Core.Utilities.Async.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Async.html",
    "title": "Namespace i5.Toolkit.Core.Utilities.Async | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Utilities.Async Classes AwaiterExtensions We could just add a generic GetAwaiter to YieldInstruction and CustomYieldInstruction but instead we add specific methods to each derived class to allow for return values that make the most sense for the specific instruction type. AwaiterExtensions.SimpleCoroutineAwaiter Processes Coroutine and notifies completion. AwaiterExtensions.SimpleCoroutineAwaiter<T> Processes Coroutine and notifies completion with result. SyncContextUtility Utility class to assist in thread and context synchronization. WaitForBackgroundThread WaitForUpdate This can be used as a way to return to the main unity thread when using multiple threads with async methods."
  },
  "api/i5.Toolkit.Core.Utilities.Async.SyncContextUtility.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Async.SyncContextUtility.html",
    "title": "Class SyncContextUtility | i5 Toolkit Documentation",
    "keywords": "Class SyncContextUtility Utility class to assist in thread and context synchronization. Inheritance Object SyncContextUtility Namespace : i5.Toolkit.Core.Utilities.Async Assembly : cs.temp.dll.dll Syntax public static class SyncContextUtility Properties IsMainThread Is this being called from the main thread? Declaration public static bool IsMainThread { get; } Property Value Type Description Boolean UnitySynchronizationContext This Unity Player's Synchronization Context. Declaration public static SynchronizationContext UnitySynchronizationContext { get; } Property Value Type Description SynchronizationContext UnityThreadId This Unity Player's Thread Id. Declaration public static int UnityThreadId { get; } Property Value Type Description Int32"
  },
  "api/i5.Toolkit.Core.Utilities.Async.WaitForBackgroundThread.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Async.WaitForBackgroundThread.html",
    "title": "Class WaitForBackgroundThread | i5 Toolkit Documentation",
    "keywords": "Class WaitForBackgroundThread Inheritance Object WaitForBackgroundThread Namespace : i5.Toolkit.Core.Utilities.Async Assembly : cs.temp.dll.dll Syntax public class WaitForBackgroundThread Methods GetAwaiter() Declaration public ConfiguredTaskAwaitable.ConfiguredTaskAwaiter GetAwaiter() Returns Type Description ConfiguredTaskAwaitable.ConfiguredTaskAwaiter"
  },
  "api/i5.Toolkit.Core.Utilities.Async.WaitForUpdate.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Async.WaitForUpdate.html",
    "title": "Class WaitForUpdate | i5 Toolkit Documentation",
    "keywords": "Class WaitForUpdate This can be used as a way to return to the main unity thread when using multiple threads with async methods. Inheritance Object WaitForUpdate Namespace : i5.Toolkit.Core.Utilities.Async Assembly : cs.temp.dll.dll Syntax public class WaitForUpdate : CustomYieldInstruction Properties keepWaiting Declaration public override bool keepWaiting { get; } Property Value Type Description Boolean"
  },
  "api/i5.Toolkit.Core.Utilities.Browser.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Browser.html",
    "title": "Class Browser | i5 Toolkit Documentation",
    "keywords": "Class Browser Implementation that opens the system's default browser Inheritance Object Browser Implements IBrowser Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public class Browser : IBrowser Methods OpenURL(String) Opens the provided URL in the system's default browser Declaration public void OpenURL(string url) Parameters Type Name Description String url The url to open Implements IBrowser"
  },
  "api/i5.Toolkit.Core.Utilities.ComponentUtilities.html": {
    "href": "api/i5.Toolkit.Core.Utilities.ComponentUtilities.html",
    "title": "Class ComponentUtilities | i5 Toolkit Documentation",
    "keywords": "Class ComponentUtilities Utility functions regarding MonoBehaviour components Inheritance Object ComponentUtilities Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public static class ComponentUtilities Methods EnsureComponentReference<T>(GameObject, ref T, Boolean) Makes sure that the given component reference is set to a component if the reference is not yet set Declaration public static void EnsureComponentReference<T>(GameObject gameObject, ref T componentReference, bool addComponent) where T : Component Parameters Type Name Description GameObject gameObject The gameobject which contains the component T componentReference The reference to the component Boolean addComponent If true, the component will be added if it does not exist; otherwise the componentReference may still be null after this call if the component does not exist Type Parameters Name Description T The type of component to search for GetOrAddComponent<T>(GameObject) Tries to get the reference to a component and adds the component if it does not exist Declaration public static T GetOrAddComponent<T>(GameObject gameObject) where T : Component Parameters Type Name Description GameObject gameObject The gameobject on which the component should be searched or added Returns Type Description T The reference to the component which already existed or was just created Type Parameters Name Description T The type of component to search for"
  },
  "api/i5.Toolkit.Core.Utilities.ConstantRotation.html": {
    "href": "api/i5.Toolkit.Core.Utilities.ConstantRotation.html",
    "title": "Class ConstantRotation | i5 Toolkit Documentation",
    "keywords": "Class ConstantRotation Scripts that applies a contant rotation around the Y axis to an object Inheritance Object ConstantRotation Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public class ConstantRotation : MonoBehaviour Fields speed The speed at which the object should rotate Declaration public float speed Field Value Type Description Single"
  },
  "api/i5.Toolkit.Core.Utilities.ContentLoaders.html": {
    "href": "api/i5.Toolkit.Core.Utilities.ContentLoaders.html",
    "title": "Namespace i5.Toolkit.Core.Utilities.ContentLoaders | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Utilities.ContentLoaders Classes UnityTextureLoader Wrapper class which loads textures using Unity's WebRequestsTexture UnityWebRequestLoader Content loader that uses UnityWebRequests to fech data from the Web Interfaces IContentLoader<T> /// Interface for modules which load content from the Web"
  },
  "api/i5.Toolkit.Core.Utilities.ContentLoaders.IContentLoader-1.html": {
    "href": "api/i5.Toolkit.Core.Utilities.ContentLoaders.IContentLoader-1.html",
    "title": "Interface IContentLoader<T> | i5 Toolkit Documentation",
    "keywords": "Interface IContentLoader<T> /// Interface for modules which load content from the Web Namespace : i5.Toolkit.Core.Utilities.ContentLoaders Assembly : cs.temp.dll.dll Syntax public interface IContentLoader<T> Type Parameters Name Description T The result's payload Methods LoadAsync(String) Loads a resource from the given URI Should be used asynchronously Declaration Task<WebResponse<T>> LoadAsync(string uri) Parameters Type Name Description String uri The uri where the string resource is stored Returns Type Description Task < WebResponse <T>> The fetched resource"
  },
  "api/i5.Toolkit.Core.Utilities.ContentLoaders.UnityTextureLoader.html": {
    "href": "api/i5.Toolkit.Core.Utilities.ContentLoaders.UnityTextureLoader.html",
    "title": "Class UnityTextureLoader | i5 Toolkit Documentation",
    "keywords": "Class UnityTextureLoader Wrapper class which loads textures using Unity's WebRequestsTexture Inheritance Object UnityTextureLoader Implements IContentLoader < Texture2D > Namespace : i5.Toolkit.Core.Utilities.ContentLoaders Assembly : cs.temp.dll.dll Syntax public class UnityTextureLoader : IContentLoader<Texture2D> Methods LoadAsync(String) Loads the texture at the given URI using Unity's built-in methods Declaration public Task<WebResponse<Texture2D>> LoadAsync(string uri) Parameters Type Name Description String uri The uri where the texture is stored Returns Type Description Task < WebResponse < Texture2D >> Returns a WebResponse with the results of the web request Implements IContentLoader<T>"
  },
  "api/i5.Toolkit.Core.Utilities.ContentLoaders.UnityWebRequestLoader.html": {
    "href": "api/i5.Toolkit.Core.Utilities.ContentLoaders.UnityWebRequestLoader.html",
    "title": "Class UnityWebRequestLoader | i5 Toolkit Documentation",
    "keywords": "Class UnityWebRequestLoader Content loader that uses UnityWebRequests to fech data from the Web Inheritance Object UnityWebRequestLoader Implements IContentLoader < String > Namespace : i5.Toolkit.Core.Utilities.ContentLoaders Assembly : cs.temp.dll.dll Syntax public class UnityWebRequestLoader : IContentLoader<string> Methods LoadAsync(String) Loads content from the given URI Declaration public Task<WebResponse<string>> LoadAsync(string uri) Parameters Type Name Description String uri The URI from where content should be downloaded Returns Type Description Task < WebResponse < String >> Returns the downloaded string content Implements IContentLoader<T>"
  },
  "api/i5.Toolkit.Core.Utilities.ConversionUtils.html": {
    "href": "api/i5.Toolkit.Core.Utilities.ConversionUtils.html",
    "title": "Class ConversionUtils | i5 Toolkit Documentation",
    "keywords": "Class ConversionUtils Extensions for converting data formats to each other Inheritance Object ConversionUtils Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public static class ConversionUtils Methods ToColor(Vector3) Converts a Vector3 to a Color Maps the x-value to the red channel, the y-value to the green channel and the z-value to the blue channel Declaration public static Color ToColor(this Vector3 vector) Parameters Type Name Description Vector3 vector The Vector3 which should be converted Returns Type Description Color Returns a color which has the same rgb values as the vector has xyz values ToColor(Vector4) Converts a Vector4 to a Color Maps the x-value to the red channel, the y-value to the green channel, the z-value to the blue channel and the w-value to the alpha channel Declaration public static Color ToColor(this Vector4 vector) Parameters Type Name Description Vector4 vector The Vector4 which should be converted Returns Type Description Color Returns a color which has the same rgba values as the vector has xyzw values ToVector3(Color) Converts a Color to a Vector3 Maps the red channel to the x value, the green channel to the y value and the blue channel to the z value Declaration public static Vector3 ToVector3(this Color color) Parameters Type Name Description Color color The color to convert Returns Type Description Vector3 Returns a Vector3 which has the same xyz values as the color has rgb values ToVector4(Color) Converts a Color to a Vector4 Maps the red channel to the x value, the green channel to the y value, the blue channel to the z value and the alpha channel to the w value Declaration public static Vector4 ToVector4(this Color color) Parameters Type Name Description Color color The color to convert Returns Type Description Vector4 Returns a Vector4 which has the same xyzw values as the color has rgba values"
  },
  "api/i5.Toolkit.Core.Utilities.Exceptions.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Exceptions.html",
    "title": "Namespace i5.Toolkit.Core.Utilities.Exceptions | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Utilities.Exceptions Classes PlatformNotSupportedException"
  },
  "api/i5.Toolkit.Core.Utilities.Exceptions.PlatformNotSupportedException.html": {
    "href": "api/i5.Toolkit.Core.Utilities.Exceptions.PlatformNotSupportedException.html",
    "title": "Class PlatformNotSupportedException | i5 Toolkit Documentation",
    "keywords": "Class PlatformNotSupportedException Inheritance Object PlatformNotSupportedException Namespace : i5.Toolkit.Core.Utilities.Exceptions Assembly : cs.temp.dll.dll Syntax public class PlatformNotSupportedException : Exception Constructors PlatformNotSupportedException() Declaration public PlatformNotSupportedException() PlatformNotSupportedException(String) Declaration public PlatformNotSupportedException(string message) Parameters Type Name Description String message PlatformNotSupportedException(String, Exception) Declaration public PlatformNotSupportedException(string message, Exception inner) Parameters Type Name Description String message Exception inner"
  },
  "api/i5.Toolkit.Core.Utilities.html": {
    "href": "api/i5.Toolkit.Core.Utilities.html",
    "title": "Namespace i5.Toolkit.Core.Utilities | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Utilities Classes Browser Implementation that opens the system's default browser ComponentUtilities Utility functions regarding MonoBehaviour components ConstantRotation Scripts that applies a contant rotation around the Y axis to an object ConversionUtils Extensions for converting data formats to each other i5Debug Logger class for writing messages to the console JsonArrayUtility Helper script for serializing and de-serializing Json Arrays Unity's built in Json Serializer is not able to handle JSON data which have an unnamed array at root level JsonUtilityWrapper NameValueCollectionExtensions ObjectPool<T> Object pool which can store instances so that they can be reused This is useful for objects like GameObjects or Meshes where the creation and destruction drops the performance This should definitely be used for meshes since they are not automatically cleaned up by the garbage collector ParserUtils Parser utils for parsing vectors from strings SpecialDebugMessages UnityWebRequestRestConnector UriUtils Utility functions for operating on Uris WebResponse<T> Container object which is produced by IContentLoader classes after they fetched content from the Web Interfaces IBrowser Contract which defines the capabilities of a browser IJsonSerializer Contract which defines the capabilities of a JSON serializer IRestConnector"
  },
  "api/i5.Toolkit.Core.Utilities.i5Debug.html": {
    "href": "api/i5.Toolkit.Core.Utilities.i5Debug.html",
    "title": "Class i5Debug | i5 Toolkit Documentation",
    "keywords": "Class i5Debug Logger class for writing messages to the console Inheritance Object i5Debug Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public static class i5Debug Methods Log(Object, MonoBehaviour) Logs a formatted message to the Unity console Declaration public static void Log(object message, MonoBehaviour sender) Parameters Type Name Description Object message The message to log MonoBehaviour sender The sender of the message Log(Object, Object) Logs a formatted message to the Unity console Declaration public static void Log(object message, object sender) Parameters Type Name Description Object message The message to log Object sender The sender of the message LogError(Object, MonoBehaviour) Logs a formatted error message to the Unity console Declaration public static void LogError(object message, MonoBehaviour sender) Parameters Type Name Description Object message The message to log MonoBehaviour sender The sender of the message LogError(Object, Object) Logs a formatted error message to the Unity console Declaration public static void LogError(object message, object sender) Parameters Type Name Description Object message The message to log Object sender The sender of the message LogWarning(Object, MonoBehaviour) Logs a formatted warning message to the Unity console Declaration public static void LogWarning(object message, MonoBehaviour sender) Parameters Type Name Description Object message The message to log MonoBehaviour sender The sender of the message LogWarning(Object, Object) Logs a formatted warning message to the Unity console Declaration public static void LogWarning(object message, object sender) Parameters Type Name Description Object message The message to log Object sender The sender of the message"
  },
  "api/i5.Toolkit.Core.Utilities.IBrowser.html": {
    "href": "api/i5.Toolkit.Core.Utilities.IBrowser.html",
    "title": "Interface IBrowser | i5 Toolkit Documentation",
    "keywords": "Interface IBrowser Contract which defines the capabilities of a browser Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public interface IBrowser Methods OpenURL(String) Opens the given URL in a browser Declaration void OpenURL(string url) Parameters Type Name Description String url The URL to open"
  },
  "api/i5.Toolkit.Core.Utilities.IJsonSerializer.html": {
    "href": "api/i5.Toolkit.Core.Utilities.IJsonSerializer.html",
    "title": "Interface IJsonSerializer | i5 Toolkit Documentation",
    "keywords": "Interface IJsonSerializer Contract which defines the capabilities of a JSON serializer Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public interface IJsonSerializer Methods FromJson<T>(String) Deserializes an object from the given JSON string Declaration T FromJson<T>(string json) Parameters Type Name Description String json The json string with the data Returns Type Description T Returns the deserialized type object Type Parameters Name Description T The type which should be deserialized ToJson(Object, Boolean) Serializes a given object to a JSON string Declaration string ToJson(object obj, bool prettyPrint = false) Parameters Type Name Description Object obj The object which should be serialized Boolean prettyPrint If set to true, the JSON output will be formatted to a more easily readable form Returns Type Description String Returns the serialized JSON string based on the object's values"
  },
  "api/i5.Toolkit.Core.Utilities.IRestConnector.html": {
    "href": "api/i5.Toolkit.Core.Utilities.IRestConnector.html",
    "title": "Interface IRestConnector | i5 Toolkit Documentation",
    "keywords": "Interface IRestConnector Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public interface IRestConnector Methods DeleteAsync(String) Declaration Task<WebResponse<string>> DeleteAsync(string uri) Parameters Type Name Description String uri Returns Type Description Task < WebResponse < String >> GetAsync(String) Declaration Task<WebResponse<string>> GetAsync(string uri) Parameters Type Name Description String uri Returns Type Description Task < WebResponse < String >> PostAsync(String, String) Declaration Task<WebResponse<string>> PostAsync(string uri, string postData) Parameters Type Name Description String uri String postData Returns Type Description Task < WebResponse < String >> PutAsync(String, String) Declaration Task<WebResponse<string>> PutAsync(string uri, string postData) Parameters Type Name Description String uri String postData Returns Type Description Task < WebResponse < String >>"
  },
  "api/i5.Toolkit.Core.Utilities.JsonArrayUtility.html": {
    "href": "api/i5.Toolkit.Core.Utilities.JsonArrayUtility.html",
    "title": "Class JsonArrayUtility | i5 Toolkit Documentation",
    "keywords": "Class JsonArrayUtility Helper script for serializing and de-serializing Json Arrays Unity's built in Json Serializer is not able to handle JSON data which have an unnamed array at root level Inheritance Object JsonArrayUtility Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public static class JsonArrayUtility Methods EncapsulateInWrapper(String) Helper function to encapsulate a json string which has an unnamed json array at root level in such a way that it can be converted using FromJson() Declaration public static string EncapsulateInWrapper(string json) Parameters Type Name Description String json The original json string Returns Type Description String The encapsulated json string which is now ready for json array de-serialization FromJson<T>(String) Converts a string to an array of the provided type Declaration public static T[] FromJson<T>(string json) Parameters Type Name Description String json The json string Returns Type Description T[] Converted array of type T Type Parameters Name Description T The array type to convert to ToJson<T>(T[]) Converts an array of type T to a json string Declaration public static string ToJson<T>(T[] array) Parameters Type Name Description T[] array Array to convert to json data Returns Type Description String JSON string Type Parameters Name Description T The type of the array ToJson<T>(T[], Boolean) Converts an array of type T to a json string Declaration public static string ToJson<T>(T[] array, bool prettyPrint) Parameters Type Name Description T[] array Array to conver to json data Boolean prettyPrint If true, the output will be printed in a way that is more human-readable Returns Type Description String Json string Type Parameters Name Description T The type of the array"
  },
  "api/i5.Toolkit.Core.Utilities.JsonUtilityWrapper.html": {
    "href": "api/i5.Toolkit.Core.Utilities.JsonUtilityWrapper.html",
    "title": "Class JsonUtilityWrapper | i5 Toolkit Documentation",
    "keywords": "Class JsonUtilityWrapper Inheritance Object JsonUtilityWrapper Implements IJsonSerializer Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public class JsonUtilityWrapper : IJsonSerializer Methods FromJson<T>(String) Declaration public T FromJson<T>(string json) Parameters Type Name Description String json Returns Type Description T Type Parameters Name Description T ToJson(Object, Boolean) Declaration public string ToJson(object obj, bool prettyPrint = false) Parameters Type Name Description Object obj Boolean prettyPrint Returns Type Description String Implements IJsonSerializer"
  },
  "api/i5.Toolkit.Core.Utilities.NameValueCollectionExtensions.html": {
    "href": "api/i5.Toolkit.Core.Utilities.NameValueCollectionExtensions.html",
    "title": "Class NameValueCollectionExtensions | i5 Toolkit Documentation",
    "keywords": "Class NameValueCollectionExtensions Inheritance Object NameValueCollectionExtensions Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public static class NameValueCollectionExtensions Methods ToDictionary(NameValueCollection) Declaration public static Dictionary<string, string> ToDictionary(this NameValueCollection collection) Parameters Type Name Description NameValueCollection collection Returns Type Description Dictionary < String , String >"
  },
  "api/i5.Toolkit.Core.Utilities.ObjectPool-1.html": {
    "href": "api/i5.Toolkit.Core.Utilities.ObjectPool-1.html",
    "title": "Class ObjectPool<T> | i5 Toolkit Documentation",
    "keywords": "Class ObjectPool<T> Object pool which can store instances so that they can be reused This is useful for objects like GameObjects or Meshes where the creation and destruction drops the performance This should definitely be used for meshes since they are not automatically cleaned up by the garbage collector Inheritance Object ObjectPool<T> Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public static class ObjectPool<T> Type Parameters Name Description T The object type which should be stored in the pool Methods ClearPool(Action<T>) Clears the default pool by removing every instance in the queue Performs the given destroyAction on each instance to destroy it You probably want to use Destroy() inside the destroyAction Declaration public static void ClearPool(Action<T> destroyAction = null) Parameters Type Name Description Action <T> destroyAction ClearPool(Int32, Action<T>) Clears the pool by removing every instance in the queue Performs the given destroyAction on each instance to destroy it You probably want to use Destroy() inside the destroyAction Declaration public static void ClearPool(int poolId, Action<T> destroyAction = null) Parameters Type Name Description Int32 poolId The id of the pool which should be cleared Action <T> destroyAction The action which should be performed to destroy on object CreateNewPool() Opens a new pool and returns the id of the pool Declaration public static int CreateNewPool() Returns Type Description Int32 The id of the created pool CreateNewPool(Int32) Opens a new pool and returns the id of the pool Declaration public static int CreateNewPool(int capacity) Parameters Type Name Description Int32 capacity Define a (soft) capacity of the pool for which memory is allocated in advance Returns Type Description Int32 The id of the created pool ReleaseResource(T) Returns the resource to the default pool so that it can be requested again This should return all control over this object back to the pool Declaration public static void ReleaseResource(T resource) Parameters Type Name Description T resource The resource which is returned to the pool ReleaseResource(Int32, T) Returns the resource to the pool so that it can be requested again This should return all control over this object back to the pool Declaration public static void ReleaseResource(int poolId, T resource) Parameters Type Name Description Int32 poolId The id of the pool T resource The resource which is returned to the pool RemovePool(Int32, Action<T>) First cleans and then removes the pool with the given id Declaration public static void RemovePool(int poolId, Action<T> destroyAction = null) Parameters Type Name Description Int32 poolId Action <T> destroyAction RequestResource(Func<T>) Requests a resource from the default pool If no resource is left, the code in the creationFactory function will be executed to create a new object The creationFactory should probably use Unity's Instantiate method Declaration public static T RequestResource(Func<T> creationFactory) Parameters Type Name Description Func <T> creationFactory Function which should create a new instance of the pooled object Returns Type Description T An instance of the object from the pool RequestResource(Int32, Func<T>) Requests a resource from the pool If no resource is left, the code in the creationFactory function will be executed to create a new object The creationFactory should probably use Unity's Instantiate method Declaration public static T RequestResource(int poolId, Func<T> creationFactory) Parameters Type Name Description Int32 poolId Func <T> creationFactory Function which should create a new instance of the pooled object Returns Type Description T An instance of the object from the pool"
  },
  "api/i5.Toolkit.Core.Utilities.ParserUtils.html": {
    "href": "api/i5.Toolkit.Core.Utilities.ParserUtils.html",
    "title": "Class ParserUtils | i5 Toolkit Documentation",
    "keywords": "Class ParserUtils Parser utils for parsing vectors from strings Inheritance Object ParserUtils Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public static class ParserUtils Methods TryParseSpaceSeparatedVector2(String, out Vector2) Tries to convert a space separated string to a Vector2 Declaration public static bool TryParseSpaceSeparatedVector2(string input, out Vector2 result) Parameters Type Name Description String input The string which should be converted Vector2 result The result of the conversion; if the conversion failed, it has the default value Returns Type Description Boolean Returns true if the conversion was successful TryParseSpaceSeparatedVector3(String, out Vector3) Tries to parse a string with three space-separated coordinates, e.g. \"1.2 -5.3 1.0\" Declaration public static bool TryParseSpaceSeparatedVector3(string input, out Vector3 result) Parameters Type Name Description String input The string which should be converted to a Vector3 Vector3 result The result of the conversion; if the conversion failed, it has the default value Returns Type Description Boolean Returns true if the string could be parsed, otherwise false TryParseStringArrayToVector2(String[], out Vector2) Parses an array of strings to Vector2 The array must have exactly two entries so that the conversion succeeds Declaration public static bool TryParseStringArrayToVector2(string[] strValues, out Vector2 result) Parameters Type Name Description String [] strValues The string array which should be parsed to a Vector2 Vector2 result The result of the conversion; if the conversion failed, it has the default value Returns Type Description Boolean Returns true if parsing was successful TryParseStringArrayToVector3(String[], out Vector3) Tries to parse a string array to a Vector3 The array must have exactly three entries so that the conversion succeeds Declaration public static bool TryParseStringArrayToVector3(string[] strValues, out Vector3 result) Parameters Type Name Description String [] strValues The string array to parse Vector3 result The result of the conversion; if the conversion failed, it has the default value Returns Type Description Boolean Returns true if the string array could be parsed, otherwise false TryParseStringArrayToVector4(String[], out Vector4) Tries to parse a string array to a Vector3 The array must have exactly four entries so that the conversion succeeds Declaration public static bool TryParseStringArrayToVector4(string[] strValues, out Vector4 result) Parameters Type Name Description String [] strValues The string array to parse Vector4 result The result of the conversion; if the conversion failed, it has the default value Returns Type Description Boolean Returns true if the string array could be parsed, otherwise false"
  },
  "api/i5.Toolkit.Core.Utilities.SpecialDebugMessages.html": {
    "href": "api/i5.Toolkit.Core.Utilities.SpecialDebugMessages.html",
    "title": "Class SpecialDebugMessages | i5 Toolkit Documentation",
    "keywords": "Class SpecialDebugMessages Inheritance Object SpecialDebugMessages Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public static class SpecialDebugMessages Methods LogArrayInitializedWithSize0Warning(MonoBehaviour, String) Declaration public static void LogArrayInitializedWithSize0Warning(MonoBehaviour thisComponent, string arrayName) Parameters Type Name Description MonoBehaviour thisComponent String arrayName LogArrayMissingReferenceError(MonoBehaviour, String, Int32) Declaration public static void LogArrayMissingReferenceError(MonoBehaviour thisComponent, string arrayName, int index) Parameters Type Name Description MonoBehaviour thisComponent String arrayName Int32 index LogComponentNotFoundError(MonoBehaviour, String, GameObject) Declaration public static void LogComponentNotFoundError(MonoBehaviour thisComponent, string searchedComponent, GameObject target) Parameters Type Name Description MonoBehaviour thisComponent String searchedComponent GameObject target LogMissingReferenceError(MonoBehaviour, String) Declaration public static void LogMissingReferenceError(MonoBehaviour thisComponent, string referenceName) Parameters Type Name Description MonoBehaviour thisComponent String referenceName"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.GameObjectAdapter.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.GameObjectAdapter.html",
    "title": "Class GameObjectAdapter | i5 Toolkit Documentation",
    "keywords": "Class GameObjectAdapter Inheritance Object GameObjectAdapter Implements IActivateable Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public class GameObjectAdapter : IActivateable Constructors GameObjectAdapter(GameObject) Declaration public GameObjectAdapter(GameObject adaptee) Parameters Type Name Description GameObject adaptee Properties ActiveInHierarchy Declaration public bool ActiveInHierarchy { get; set; } Property Value Type Description Boolean ActiveSelf Declaration public bool ActiveSelf { get; set; } Property Value Type Description Boolean Adaptee Declaration public GameObject Adaptee { get; } Property Value Type Description GameObject Implements IActivateable"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.html",
    "title": "Namespace i5.Toolkit.Core.Utilities.UnityAdapters | i5 Toolkit Documentation",
    "keywords": "Namespace i5.Toolkit.Core.Utilities.UnityAdapters Classes GameObjectAdapter RectTransformAdapter ScrollRectAdapter TextMeshProTextAdapter TextMeshProUGUITextAdapter TextMeshTextAdapter Interfaces IActivateable IRectangle IScrollView ITextDisplay"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.IActivateable.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.IActivateable.html",
    "title": "Interface IActivateable | i5 Toolkit Documentation",
    "keywords": "Interface IActivateable Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public interface IActivateable Properties ActiveSelf Declaration bool ActiveSelf { get; set; } Property Value Type Description Boolean"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.IRectangle.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.IRectangle.html",
    "title": "Interface IRectangle | i5 Toolkit Documentation",
    "keywords": "Interface IRectangle Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public interface IRectangle Properties Size Declaration Vector2 Size { get; set; } Property Value Type Description Vector2"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.IScrollView.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.IScrollView.html",
    "title": "Interface IScrollView | i5 Toolkit Documentation",
    "keywords": "Interface IScrollView Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public interface IScrollView Properties NormalizedPosition Declaration Vector2 NormalizedPosition { get; set; } Property Value Type Description Vector2"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.ITextDisplay.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.ITextDisplay.html",
    "title": "Interface ITextDisplay | i5 Toolkit Documentation",
    "keywords": "Interface ITextDisplay Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public interface ITextDisplay Properties Text Declaration string Text { get; set; } Property Value Type Description String"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.RectTransformAdapter.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.RectTransformAdapter.html",
    "title": "Class RectTransformAdapter | i5 Toolkit Documentation",
    "keywords": "Class RectTransformAdapter Inheritance Object RectTransformAdapter Implements IRectangle Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public class RectTransformAdapter : IRectangle Constructors RectTransformAdapter(RectTransform) Declaration public RectTransformAdapter(RectTransform adaptee) Parameters Type Name Description RectTransform adaptee Properties Adaptee Declaration public RectTransform Adaptee { get; } Property Value Type Description RectTransform Size Declaration public Vector2 Size { get; set; } Property Value Type Description Vector2 Implements IRectangle"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.ScrollRectAdapter.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.ScrollRectAdapter.html",
    "title": "Class ScrollRectAdapter | i5 Toolkit Documentation",
    "keywords": "Class ScrollRectAdapter Inheritance Object ScrollRectAdapter Implements IScrollView Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public class ScrollRectAdapter : IScrollView Constructors ScrollRectAdapter(ScrollRect) Declaration public ScrollRectAdapter(ScrollRect adaptee) Parameters Type Name Description ScrollRect adaptee Properties Adaptee Declaration public ScrollRect Adaptee { get; } Property Value Type Description ScrollRect NormalizedPosition Declaration public Vector2 NormalizedPosition { get; set; } Property Value Type Description Vector2 Implements IScrollView"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.TextMeshProTextAdapter.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.TextMeshProTextAdapter.html",
    "title": "Class TextMeshProTextAdapter | i5 Toolkit Documentation",
    "keywords": "Class TextMeshProTextAdapter Inheritance Object TextMeshProTextAdapter Implements ITextDisplay Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public class TextMeshProTextAdapter : ITextDisplay Constructors TextMeshProTextAdapter(TextMeshPro) Declaration public TextMeshProTextAdapter(TextMeshPro textMesh) Parameters Type Name Description TextMeshPro textMesh Properties Text Declaration public string Text { get; set; } Property Value Type Description String TextMesh Declaration public TextMeshPro TextMesh { get; } Property Value Type Description TextMeshPro Implements ITextDisplay"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.TextMeshProUGUITextAdapter.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.TextMeshProUGUITextAdapter.html",
    "title": "Class TextMeshProUGUITextAdapter | i5 Toolkit Documentation",
    "keywords": "Class TextMeshProUGUITextAdapter Inheritance Object TextMeshProUGUITextAdapter Implements ITextDisplay Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public class TextMeshProUGUITextAdapter : ITextDisplay Constructors TextMeshProUGUITextAdapter(TextMeshProUGUI) Declaration public TextMeshProUGUITextAdapter(TextMeshProUGUI textMesh) Parameters Type Name Description TextMeshProUGUI textMesh Properties Text Declaration public string Text { get; set; } Property Value Type Description String TextMesh Declaration public TextMeshProUGUI TextMesh { get; } Property Value Type Description TextMeshProUGUI Implements ITextDisplay"
  },
  "api/i5.Toolkit.Core.Utilities.UnityAdapters.TextMeshTextAdapter.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityAdapters.TextMeshTextAdapter.html",
    "title": "Class TextMeshTextAdapter | i5 Toolkit Documentation",
    "keywords": "Class TextMeshTextAdapter Inheritance Object TextMeshTextAdapter Implements ITextDisplay Namespace : i5.Toolkit.Core.Utilities.UnityAdapters Assembly : cs.temp.dll.dll Syntax public class TextMeshTextAdapter : ITextDisplay Constructors TextMeshTextAdapter(TextMesh) Declaration public TextMeshTextAdapter(TextMesh textMesh) Parameters Type Name Description TextMesh textMesh Properties Text Declaration public string Text { get; set; } Property Value Type Description String TextMesh Declaration public TextMesh TextMesh { get; } Property Value Type Description TextMesh Implements ITextDisplay"
  },
  "api/i5.Toolkit.Core.Utilities.UnityWebRequestRestConnector.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UnityWebRequestRestConnector.html",
    "title": "Class UnityWebRequestRestConnector | i5 Toolkit Documentation",
    "keywords": "Class UnityWebRequestRestConnector Inheritance Object UnityWebRequestRestConnector Implements IRestConnector Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public class UnityWebRequestRestConnector : IRestConnector Methods DeleteAsync(String) Declaration public Task<WebResponse<string>> DeleteAsync(string uri) Parameters Type Name Description String uri Returns Type Description Task < WebResponse < String >> GetAsync(String) Declaration public Task<WebResponse<string>> GetAsync(string uri) Parameters Type Name Description String uri Returns Type Description Task < WebResponse < String >> PostAsync(String, String) Declaration public Task<WebResponse<string>> PostAsync(string uri, string postData) Parameters Type Name Description String uri String postData Returns Type Description Task < WebResponse < String >> PutAsync(String, String) Declaration public Task<WebResponse<string>> PutAsync(string uri, string postData) Parameters Type Name Description String uri String postData Returns Type Description Task < WebResponse < String >> Implements IRestConnector"
  },
  "api/i5.Toolkit.Core.Utilities.UriUtils.html": {
    "href": "api/i5.Toolkit.Core.Utilities.UriUtils.html",
    "title": "Class UriUtils | i5 Toolkit Documentation",
    "keywords": "Class UriUtils Utility functions for operating on Uris Inheritance Object UriUtils Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public class UriUtils Methods DictionaryToParameterString<T>(Dictionary<String, T>) Declaration public static string DictionaryToParameterString<T>(Dictionary<string, T> dictionary) Parameters Type Name Description Dictionary < String , T> dictionary Returns Type Description String Type Parameters Name Description T GetUriFragments(Uri) Declaration public static Dictionary<string, string> GetUriFragments(Uri uri) Parameters Type Name Description Uri uri Returns Type Description Dictionary < String , String > GetUriParameters(Uri) Extracts the parameters of a given uri and returns them Declaration public static Dictionary<string, string> GetUriParameters(Uri uri) Parameters Type Name Description Uri uri The uri which contains the parameters Returns Type Description Dictionary < String , String > Returns the parameters of the uri RewriteFileUriPath(Uri, String) Rewrites a given URI that points to a file so that it points to the location specified by the relative file path The relative file path starts at the uri's destination Declaration public static string RewriteFileUriPath(Uri uri, string relativeFilePath) Parameters Type Name Description Uri uri The uri which should be rewritten String relativeFilePath A relative file path starting at uri's location Returns Type Description String Returns an absolute Uri which points to the location of the relative file path WordArrayToSpaceEscapedString(String[]) Declaration public static string WordArrayToSpaceEscapedString(string[] array) Parameters Type Name Description String [] array Returns Type Description String"
  },
  "api/i5.Toolkit.Core.Utilities.WebResponse-1.html": {
    "href": "api/i5.Toolkit.Core.Utilities.WebResponse-1.html",
    "title": "Class WebResponse<T> | i5 Toolkit Documentation",
    "keywords": "Class WebResponse<T> Container object which is produced by IContentLoader classes after they fetched content from the Web Inheritance Object WebResponse<T> Namespace : i5.Toolkit.Core.Utilities Assembly : cs.temp.dll.dll Syntax public class WebResponse<T> Type Parameters Name Description T The return type of the WebResponse Constructors WebResponse(T, Byte[], Int64) Creates a successul WebResponse with the given content and code Declaration public WebResponse(T content, byte[] byteData, long code) Parameters Type Name Description T content The content of the Web request's response Byte [] byteData The byte data of the response body Int64 code The response code WebResponse(Boolean, T, Byte[], Int64, String) Creates a new WebResponse object Declaration public WebResponse(bool successful, T content, byte[] byteData, long code, string errorMessage) Parameters Type Name Description Boolean successful States whether the request was successful T content Contains the content of the response Byte [] byteData Contains the byte data of the response body Int64 code The response code String errorMessage Any error messages that might have occurred WebResponse(String, Int64) Creates a failed WebResponse with the specified error message and code Declaration public WebResponse(string errorMessage, long code) Parameters Type Name Description String errorMessage The error message Int64 code The response code Properties ByteData Byte data of the Web requests response body Declaration public byte[] ByteData { get; } Property Value Type Description Byte [] Code The response code of the Web request Declaration public long Code { get; } Property Value Type Description Int64 Content Contains the content of the Web request Set to default value if the Web request failed Declaration public T Content { get; } Property Value Type Description T ErrorMessage An error message if any occurred Declaration public string ErrorMessage { get; } Property Value Type Description String Successful Set to true if the Web request was successful Declaration public bool Successful { get; } Property Value Type Description Boolean"
  },
  "index.html": {
    "href": "index.html",
    "title": "i5 Toolkit for Unity | i5 Toolkit Documentation",
    "keywords": "i5 Toolkit for Unity This toolkit contains a collection of features which can be reused in Unity projects. It is a foundation for new projects, kickstarting the development with already completed tools. Modules The i5 Toolkit provides a series of modules and features that can be used in projects. Modified 3D Objects Object Pool Obj Importer OpenID Connect Client Procedural Geometry Scene Documentation Service Core Spawner Setup There are different ways to add the package to a project. Alternative 1: Unity Dependency File with Git (Unity 2018.3 or later) (Recommended) The tool is available as a package for the Unity Package Manager. It can be included in new projects by referencing the git-repository on GitHub in the dependency file of the Unity project: Open your project's root folder in a file explorer. Navigate to the Packages folder and open the file manifest.json. It contains a list of package dependencies which are loaded into the project. To add a specific version of the tool to the dependencies, add the following line inside of the \"dependencies\" object and replace [version] with the release number, e.g. \"v1.0.0\". To receive the latest version, replace [version] with upm. \"com.i5.toolkit.core\": \"https://github.com/rwth-acis/i5-Toolkit-for-Unity.git#[version]\", After that, Unity will automatically download and import the package. If you specify \"upm\" to get the latest version, be aware that the package is not automatically updated. This command just pulls the latest version which is available at that time. To update to the newest current version, remove the package again and re-download it. Alternative 2: Unity Package Manager UI with Git (Unity 2019.3 or later) The package can be downloaded from a git-repository in the package manager's UI. In Unity, go to Window > Package Manger. Click on the plus-button in the top left corner of the package manager and select \"add\". Enter https://github.com/rwth-acis/i5-Toolkit-for-Unity.git#[version] into the text field where [version] is replaced with the release number, e.g. \"v1.0.0\" or upm for the latest version. Confirm the download by clicking on the \"add\" button. If you specify \"upm\" to get the latest version, be aware that the package is not automatically updated. This command just pulls the latest version which is available at that time. To update to the newest current version, remove the package again and re-download it. Alternative 3: Import custom package (Unity 2017 or later) Another option is to import the package as a .unitypackage. Download the .unitypackage-file which is supplied with the corresponding release on the releases page. With your project opened, perform a right-click on the assets browser in Unity. Select \"Import Package > Custom Packge\" from the context menu. Navigate to the path where you downloaded the .unitypackage-file, select it and confirm by clicking the \"Open\" buttom A dialog window opens where you can select which files should be imported. Select everything and click on \"Import\". Important for alternative 3: If you are updating from an earlier version, it is recommended to delete the existing \"i5 Toolkit\" folder. After that, import the new package. Example Scenes The different modules and features are presented in example scenes which can be found in the GitHub repository . You can use the example scenes as an interactive documentation, an experimentation playground and to test the features. Unit Tests The project is tested using Unit tests. Continuous integration using GitHub Actions has been set up to test and deploy new versions of the package. Related Projects For Mixed Reality development, also check out the i5 Toolkit for MR . It is an extension package that builds upon the functionality of this package and is optimized for Mixed Reality. Disclaimer This repository is not sponsored by or affiliated with Unity Technologies or its affiliates. \"Unity\" is a trademark or registered trademark of Unity Technologies or its affiliates in the U.S. and elsewhere."
  },
  "manual/sample.html": {
    "href": "manual/sample.html",
    "title": "Example | i5 Toolkit Documentation",
    "keywords": "Example This is an example page showing how to use DocFX. You can also auto-reference the API, e.g. <xref:Global.ButtonScript>. To do so, write <xref:Namespace.Class> , so for the ButtonScript in the global namespace <xref:Global.ButtonScript> . The title of the link is automatically determined. The documentation is configured in a way that references to Unity's API are also resolved and linked: Vector3 ... or references to Microsoft's API: String"
  }
}
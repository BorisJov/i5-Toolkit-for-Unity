on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create & Upload Release

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Collect Meta Files
        run: |
          echo "Assets/i5 Toolkit.meta" > metaList
          find ./Assets/i5 Toolkit/ -name \*.meta >> metaList

      - name: Create Package Folder
        run: mkdir package

      - name: Create Unity Package
        uses: pCYSl5EDgo/create-unitypackage@v1
        with:
          package-path: 'package/output.unitypackage'
          include-files: metaList
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: package/output.unitypackage
          asset_name: i5-Toolkit-for-Unity-${{ github.ref }}.unitypackage
          asset_content_type: application/zip